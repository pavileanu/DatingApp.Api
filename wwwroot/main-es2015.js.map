{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_guards/auth.guard.ts","./src/app/_guards/prevent-unsaved.guard.ts","./src/app/_models/Pagination.ts","./src/app/_resolvers/list.resolver.ts","./src/app/_resolvers/member-detail.resolver.ts","./src/app/_resolvers/member-edit.resover.ts","./src/app/_resolvers/member-users.resolver.ts","./src/app/_resolvers/messages.resolver.ts","./src/app/_services/alertify.service.ts","./src/app/_services/auth.service.ts","./src/app/_services/error.interceptor.ts","./src/app/_services/user.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/members/member-details/member-details.component.ts","./src/app/members/member-details/member-details.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/routes.ts","./src/app/value/value.component.ts","./src/app/value/value.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { AuthService } from '../_services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router, private alertifyService: AlertifyService) {}\n\n  canActivate(): boolean  {\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n\n    this.alertifyService.error('Restricted');\n    this.router.navigate(['./home']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\n\r\n@Injectable()\r\nexport class PreventUnsaved implements CanDeactivate<MemberEditComponent> {\r\n    canDeactivate(component: MemberEditComponent) {\r\n        if(component.editForm.dirty){\r\n            return confirm('Do you cotinue? Any unsaved changes will be lost');\r\n        }\r\n        return true;\r\n    }\r\n}","export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n    totalPages: number;\n}\n\nexport class PaginationResult<T> {\n    result: T;\n    pagination: Pagination;\n}","import {Injectable} from '@angular/core';\r\nimport {User} from '../_models/user';\r\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ListResolver implements Resolve<User[]>{\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    likesParams = 'Likers';\r\n\r\n    constructor(private userService: UserService,\r\n                private router: Router, private alertify: AlertifyService)\r\n    {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n        return this.userService.getUsers(this.pageNumber, this.pageSize, null, this.likesParams).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import {Injectable} from '@angular/core';\r\nimport {User} from '../_models/user';\r\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberDetailResolver implements Resolve<User>{\r\n    constructor(private userService: UserService,\r\n                private router: Router, private alertify: AlertifyService)\r\n    {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(route.params['id']).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/members']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import {Injectable} from '@angular/core';\r\nimport {User} from '../_models/user';\r\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User>{\r\n    constructor(private userService: UserService, private authService: AuthService,\r\n                private router: Router, private alertify: AlertifyService)\r\n    {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import {Injectable} from '@angular/core';\r\nimport {User} from '../_models/user';\r\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberUsersResolver implements Resolve<User[]>{\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n\r\n    constructor(private userService: UserService,\r\n                private router: Router, private alertify: AlertifyService)\r\n    {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n        return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import {Injectable} from '@angular/core';\r\nimport {User} from '../_models/user';\r\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Message } from '../_models/Message';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MessagesResolver implements Resolve<Message[]>{\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    messageContainer = 'Unread';\r\n\r\n    constructor(private userService: UserService, private authService: AuthService,\r\n                private router: Router, private alertify: AlertifyService)\r\n    {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Message[]> {\r\n        return this.userService.getMessages(this.authService.decodedToken.nameid,\r\n            this.pageNumber, this.pageSize, this.messageContainer).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport * as alertify from 'alertifyjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\nconstructor() { }\n\n  confirm(message: string, okCallBack: () => any ){\n    alertify.confirm(message, (e: any) => {\n      if (e) {\n        okCallBack();\n      }\n      else {}\n\n    });\n  }\n\n  success(message: string){\n    alertify.success(message);\n  }\n\n  error(message: string){\n    alertify.error(message);\n  }\n\n  warning(message: string){\n    alertify.warning(message);\n  }\n\n  message(message: string){\n    alertify.message(message);\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\nimport { User } from '../_models/user';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  baseUrl = environment.apiUrl + 'auth/';\r\n  jwtHelper = new JwtHelperService();\r\n  decodedToken: any;\r\n  currentUser: User;\r\n  photoUrl = new BehaviorSubject<string>('../../asstes/user.png');\r\n  currentPhotoUrl = this.photoUrl.asObservable();\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  changeMemberPhoto(photoUrl: string) {\r\n    this.photoUrl.next(photoUrl);\r\n  }\r\n\r\n  login(model: any)\r\n  {\r\n    return this.http.post(this.baseUrl + 'login', model)\r\n      .pipe(\r\n        map((response: any) => {\r\n          const user = response;\r\n          if (user){\r\n            localStorage.setItem('token', user.token);\r\n            localStorage.setItem('user', JSON.stringify(user.user));\r\n            this.currentUser = user.user;\r\n            this.decodedToken = this.jwtHelper.decodeToken(user.token);\r\n            this.changeMemberPhoto(this.currentUser.photoUrl);\r\n          }\r\n        })\r\n    );\r\n  }\r\n\r\n  register(user: User){\r\n    return this.http.post(this.baseUrl + 'register', user);\r\n  }\r\n\r\n  loggedIn(){\r\n    const token = localStorage.getItem('token');\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    req: import('@angular/common/http').HttpRequest<any>,\r\n    next: import('@angular/common/http').HttpHandler\r\n  ): import('rxjs').Observable<import('@angular/common/http').HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n        catchError(error => {\r\n            if (error.status === 401){\r\n                return throwError(error.statusText);\r\n            }\r\n\r\n            if (error.name === 'HttpErrorResponse') {\r\n                const applicationError = error.headers.get('Application-Error');\r\n                if (applicationError){\r\n                    return throwError(applicationError);\r\n                }\r\n                const serverError = error.error;\r\n                let modalStateErrors = '';\r\n                if (serverError.errors && typeof(serverError.errors) === 'object') {\r\n                    for (const key in serverError.errors) {\r\n                        if (serverError.errors[key]) {\r\n                            modalStateErrors += serverError.errors[key] + '\\n';\r\n                        }\r\n                    }\r\n                }\r\n                return throwError(modalStateErrors || serverError || 'Server Error');\r\n            }\r\n        })\r\n    );\r\n  }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ErrorInterceptor,\r\n    multi: true\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { AuthService } from './auth.service';\nimport { PaginationResult } from '../_models/Pagination';\nimport { map } from 'rxjs/operators';\nimport { Message } from '../_models/Message';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UserService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private authService: AuthService) { }\n\n  getUsers(page?, itemsPerPage?, userParams?, likesParam?): Observable<PaginationResult<User[]>> {\n    let paginatedResult: PaginationResult<User[]> = new PaginationResult<User[]>();\n    let params = new HttpParams();\n    \n    if(page != null && itemsPerPage !=null){\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    } \n\n    if(userParams != null) {\n      params = params.append('minAge', userParams.minAge);\n      params = params.append('maxAge', userParams.maxAge);\n      params = params.append('gender', userParams.gender);\n      params = params.append('orderBy', userParams.orderBy);\n    }\n\n    if (likesParam === 'Likers') {\n      params = params.append('likers', 'true');\n    }\n    if (likesParam === 'Likees') {\n      params = params.append('likees', 'true');\n    }\n\n    return this.http.get<User[]>(this.baseUrl + 'users', {observe: 'response', params })\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if(response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getUser(id: number): Observable<User> {\n    return this.http.get<User>(this.baseUrl + 'users/' + id);\n  }\n\n  updateUser(id: number, user: User): Observable<User> {\n    return this.http.put<User>(this.baseUrl + 'users/' + id, user);\n  }\n\n  setMainPhoto(userId: number, id: number) {\n    return this.http.post(this.baseUrl + 'users/' + userId +  '/photos/' + id + '/setMain', {});\n  }\n\n  deletePhoto(userId: number, id: number) {\n    return this.http.delete(this.baseUrl + 'users/' + userId +  '/photos/' + id);\n  }\n\n  sendLike(id: number, recipientId: number) {\n    return this.http.post(this.baseUrl + 'users/' + id + '/like/' + recipientId, {});\n  }\n\n  getMessages(id: number, page?, itemsPerPage?, messageContainer?) {\n    const paginatedResult: PaginationResult<Message[]> = new PaginationResult<Message[]>();\n\n    let params = new HttpParams();\n    params = params.append('messageContainer', messageContainer);\n\n    if(page != null && itemsPerPage !=null){\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    } \n    \n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages', {observe: 'response', params})\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') !== null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n\n          return paginatedResult;\n        })\n      );\n  }\n\n  getMessageThread(id: number, recipientId: number) {\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages/thread/' + recipientId);\n  }\n\n  sendMessage(id: number, message: Message) {\n    return this.http.post(this.baseUrl + 'users/' + id + '/messages', message);\n  }\n\n  deleteMessage(id: number, userId: number){\n    return this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + id, {});\n  }\n\n  markAsRead(userId: number, messageId: number) {\n    this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + messageId + '/read', {})\n      .subscribe();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { User } from './_models/user';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  jwtHelper = new JwtHelperService();\r\n\r\n  constructor(private authService: AuthService){}\r\n\r\n  ngOnInit(){\r\n    const token = localStorage.getItem('token');\r\n    const user: User = JSON.parse(localStorage\r\n      .getItem('user'));\r\n    if (token) {\r\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\r\n    }\r\n    if (user) {\r\n      this.authService.currentUser = user;\r\n      this.authService.changeMemberPhoto(user.photoUrl);\r\n    }\r\n  }\r\n\r\n}\r\n","<app-nav></app-nav>\r\n<router-outlet></router-outlet>\r\n<app-value></app-value>\r\n\r\n\r\n\r\n","import { BrowserModule, HammerGestureConfig, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\r\nimport { NgModule, Pipe } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ValueComponent } from './value/value.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { MemberDetailsComponent } from './members/member-details/member-details.component';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { appRoutes } from './routes';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberUsersResolver } from './_resolvers/member-users.resolver';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resover';\r\nimport { PreventUnsaved } from './_guards/prevent-unsaved.guard';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\r\nimport { ListResolver } from './_resolvers/list.resolver';\r\nimport { MessagesResolver } from './_resolvers/messages.resolver';\r\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\r\n\r\n\r\n\r\nexport function tokenGetter(){\r\n   return localStorage.getItem('token');\r\n}\r\n\r\nexport class CustomHammerConfig extends HammerGestureConfig {\r\n   overrides = {\r\n      pinch: {enable: false},\r\n      rotate: {enable: false}\r\n   };\r\n}\r\n\r\n\r\n@NgModule({\r\n   declarations: [\r\n      AppComponent,\r\n      ValueComponent,\r\n      NavComponent,\r\n      HomeComponent,\r\n      RegisterComponent,\r\n      ListsComponent,\r\n      MemberListComponent,\r\n      MessagesComponent,\r\n      MemberCardComponent,\r\n      MemberDetailsComponent,\r\n      MemberEditComponent,\r\n      PhotoEditorComponent,\r\n      MemberMessagesComponent\r\n   ],\r\n   imports: [\r\n      BrowserModule,\r\n      ReactiveFormsModule,\r\n      HttpClientModule,\r\n      FormsModule,\r\n      BrowserAnimationsModule,\r\n      BsDropdownModule.forRoot(),\r\n      BsDatepickerModule.forRoot(),\r\n      PaginationModule.forRoot(),\r\n      TabsModule.forRoot(),\r\n      ButtonsModule.forRoot(),\r\n      RouterModule.forRoot(appRoutes),\r\n      NgxGalleryModule,\r\n      FileUploadModule,\r\n      JwtModule.forRoot( {\r\n         config: {\r\n            tokenGetter: tokenGetter,\r\n            whitelistedDomains: ['localhost:5000'],\r\n            blacklistedRoutes: ['localhost:5000/auth']\r\n         }\r\n      })\r\n   ],\r\n   providers: [\r\n      AuthService,\r\n      ErrorInterceptorProvider,\r\n      MemberDetailResolver,\r\n      MemberUsersResolver,\r\n      MemberEditResolver,\r\n      MessagesResolver,\r\n      ListResolver,\r\n      PreventUnsaved,\r\n      { provide: HAMMER_GESTURE_CONFIG, useClass: CustomHammerConfig}\r\n   ],\r\n   bootstrap: [\r\n      AppComponent,\r\n      ValueComponent\r\n   ]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  registerMode = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  toogleRegisterMode(){\n    this.registerMode = !this.registerMode;\n  }\n\n  cancelRegisterMode(registerMode: boolean){\n    this.registerMode = registerMode;\n  }\n\n}\n","<div class=\"container mt-5\">\n  <div *ngIf=\"!registerMode\" style=\"text-align: center\">\n    <h1>Find your match</h1>\n    <p class=\"lead\">Come on in to view your matches... All you need to do is sign up!</p>\n    <div class=\"text-center\">\n      <button class=\"btn btn-primary btn-lg\" (click)=\"toogleRegisterMode()\">Register</button>\n      <button class=\"btn btn-info btn-lg\">Learn more</button>\n    </div>\n  </div>\n\n  <div *ngIf=\"registerMode\" class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-4\">\n        <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { AuthService } from '../_services/auth.service';\nimport { UserService } from '../_services/user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from '../_models/user';\nimport { Pagination, PaginationResult } from '../_models/Pagination';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  likesParam: string;\n\n  constructor(private authService: AuthService, private userService: UserService,\n    private route: ActivatedRoute, private alertifyService: AlertifyService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n    this.likesParam = 'Likers';\n  }\n\n  loadUsers(){ \n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\n    .subscribe((res: PaginationResult<User[]>) => {\n      this.users = res.result;\n      this.pagination = res.pagination;\n    }, error => {\n      this.alertifyService.error(error);\n    });\n  }\n  \n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n\n}\n","<div class=\"text-center mt-3\">\n  <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\'ve Liked'}} : {{pagination.totalItems}}</h2>\n</div>\n\n<div class=\"container mt-3\">\n\n<div class=\"row\">\n  <div class=\"btn-group\">\n    <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"Likers\" (click)=\"loadUsers()\">Members who like me</button>\n    <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"Likees\" (click)=\"loadUsers()\">Members who I like</button>\n  </div>\n</div>\n\n<br>\n\n<div class=\"row\">\n  <div *ngFor=\"let user of users\" class=\"col-sm-6 col-md-4 col-lg-4 col-xl-2\">\n    <app-member-card [user]=\"user\"></app-member-card>\n  </div>\n</div>\n\n\n\n</div>\n\n<div class=\"d-flex justify-content-center\">\n<pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\" [(ngModel)]=\"pagination.currentPage\"\n  (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\"\n  >\n\n</pagination>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() user: User;\n\n  constructor(private authService: AuthService, private userService: UserService, \n              private alertifyService: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  sendLike(id: number) {\n    this.userService.sendLike(this.authService.decodedToken.nameid, id).subscribe(data => {\n      this.alertifyService.success('You have like: ' + this.user.knownAs);\n    }, error => {\n      this.alertifyService.error(error);\n    });\n  }\n\n}\n","<div class=\"card mb-4\">\r\n  <div class=\"card-img-wrapper\">\r\n    <img src=\"{{user.photoUrl || '../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\" class=\"card-img-top\">\r\n    <ul class=\"list-inline member-icons animate text-center\">\r\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" [routerLink]=\"['/members/', user.id ]\" routerLinkActive=\"router-link-active\" ><i class=\"fa fa-user\"></i></button></li>\r\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" (click) = \"sendLike(user.id)\"><i class=\"fa fa-heart\"></i></button></li>\r\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" [routerLink]=\"['/members/', user.id]\" [queryParams]=\"{tab: 3}\"><i class=\"fa fa-envelope\"></i></button></li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"card-body p-1\">\r\n    <h6 class=\"card-title text-center mb-1\">\r\n      <i class=\"fa fa-user\"></i>\r\n      {{user.knownAs}}, {{user.age}}\r\n    </h6>\r\n    <p class=\"card-text text-muted text-center\">\r\n      {{user.city}}\r\n    </p>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from '@kolkov/ngx-gallery';\nimport { TabsetComponent } from 'ngx-bootstrap/tabs/public_api';\n\n@Component({\n  selector: 'app-member-details',\n  templateUrl: './member-details.component.html',\n  styleUrls: ['./member-details.component.css']\n})\nexport class MemberDetailsComponent implements OnInit {\n  @ViewChild('memberTabs', {static: true}) memberTabs: TabsetComponent;\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n\n  constructor(private userService: UserService, private alertifyService: AlertifyService,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'] });\n\n    this.route.queryParams.subscribe(params => {\n      const selectedTab = params['tab'];\n      this.memberTabs.tabs[selectedTab > 0 ? selectedTab : 0].active = true;\n    })\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false\n      },\n            {\n              breakpoint: 800,\n              width: '100%',\n              height: '600px',\n              imagePercent: 80,\n              thumbnailsPercent: 20,\n              thumbnailsMargin: 20,\n              thumbnailMargin: 20\n            },\n            {\n              breakpoint: 400,\n              preview: false\n            }\n    ];\n\n    this.galleryImages = this.getImages();\n\n  }\n\n\n  getImages(){\n    const imagesUrls = [];\n    for (const photo of this.user.photos) {\n      imagesUrls.push({\n        small: photo.url,\n        medium: photo.url,\n        big: photo.url,\n        description: photo.description\n      });\n    }\n\n    return imagesUrls;\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n\n\n\n  // loadUser() {\n  //   this.userService.getUser(+this.route.snapshot.params['id']).subscribe(\n  //     (user: User) => {\n  //       this.user = user;\n  //     }, error => {\n  //       this.alertifyService.error(error);\n  //     }\n  //   );\n  // }\n\n}\n","<div class=\"container mt-4\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-4\">\r\n      <div class=\"card\">\r\n        <img src=\"{{user.photoUrl || '../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\" class=\"card-img-top img-thumbnail\">\r\n        <div class=\"card-body\">\r\n          <div>\r\n            <strong>Location:</strong>\r\n            <p>{{user.city}}, {{user.country}}</p>\r\n          </div>\r\n          <div>\r\n            <strong>Age:</strong>\r\n            <p>{{user.age}}</p>\r\n          </div>\r\n          <div>\r\n            <strong>Last Active:</strong>\r\n            <p>{{user.lastActive | date: 'mediumDate'}}</p>\r\n          </div>\r\n          <div>\r\n            <strong>Member since:</strong>\r\n            <p>{{user.created | date: 'mediumDate'}}</p>\r\n          </div>\r\n          <div class=\"card-footer\">\r\n            <div class=\"btn-group d-flex\">\r\n              <button class=\"btn btn-primary w-100\">Like</button>\r\n              <button class=\"btn btn-success w-100\" (click)=\"selectTab(3)\">Message</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-8\">\r\n      <div class=\"tab-panel\">\r\n        <tabset class=\"member-tabset\" #memberTabs>\r\n          <tab heading=\"About {{user.knownAs}}\">\r\n            <h4>Description</h4>\r\n            <p>{{user.introduction}}</p>\r\n            <h4>Look For</h4>\r\n            <p>{{user.lookingFor}}</p>\r\n          </tab>\r\n          <tab heading=\"Interests\">\r\n            <h4>Interests</h4>\r\n            <p>{{user.interests}}</p>\r\n          </tab>\r\n          <tab heading=\"Photos\">\r\n            <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\"></ngx-gallery>\r\n          </tab>\r\n          <tab heading=\"Messages\">\r\n            <app-member-messages [recipientId] = \"user.id\"></app-member-messages>\r\n          </tab>\r\n          \r\n        </tabset>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm: NgForm;\n  user: User;\n  photoUrl: string;\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNOtification($event: any){\n     if(this.editForm.dirty) {\n       $event.returnValue = true;\n     }\n  }\n\n  constructor(private userService: UserService, private alertifyService: AlertifyService,\n              private route: ActivatedRoute, private authService: AuthService\n              ) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'] });\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  updateUser(){\n    this.userService.updateUser(this.authService.decodedToken.nameid, this.user).subscribe(\n      success => {\n        this.alertifyService.success('Updated successfuly');\n        this.editForm.reset(this.user);\n      },\n      error => {\n        this.alertifyService.error(error);\n      }\n    );\n\n  }\n\n  updateMainPhoto(photoUrl: string){\n    this.user.photoUrl = photoUrl;\n  }\n\n}\n","<div class=\"container mt-4\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-4\">\r\n      <h1>Your Profile</h1>\r\n    </div>\r\n    <div class=\"col-sm-8\">\r\n      <div *ngIf=\"editForm.dirty\" class=\"alert alert-info\">\r\n        <strong>Information:</strong> You have made changes. Any unsaved changes will be lost!\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-4\">\r\n      <div class=\"card\">\r\n        <img src=\"{{photoUrl || '../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\" class=\"card-img-top img-thumbnail\">\r\n        <div class=\"card-body\">\r\n          <div>\r\n            <strong>Location:</strong>\r\n            <p>{{user.city}}, {{user.country}}</p>\r\n          </div>\r\n          <div>\r\n            <strong>Age:</strong>\r\n            <p>{{user.age}}</p>\r\n          </div>\r\n          <div>\r\n            <strong>Last Active:</strong>\r\n            <p>{{ user.lastActive | date: 'mediumDate'}}</p>\r\n          </div>\r\n          <div>\r\n            <strong>Member since:</strong>\r\n            <p>{{user.created | date: 'mediumDate'}}</p>\r\n          </div>\r\n          <div class=\"card-footer\">\r\n            <div class=\"btn-group d-flex\">\r\n              <button [disabled]=\"!editForm.dirty\" form=\"editForm\" class=\"btn btn-primary w-100\">Save changes</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-8\">\r\n      <div class=\"tab-panel\">\r\n        <tabset class=\"member-tabset\">\r\n          <tab heading=\"Edit Profile\">\r\n            <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateUser()\">\r\n              <h4>Description</h4>\r\n              <textarea class=\"form-control\" name=\"introduction\" rows=\"6\" \r\n              [(ngModel)]=\"user.introduction\"></textarea>\r\n              <h4>Look For</h4>\r\n              <textarea class=\"form-control\" name=\"lookingFor\" rows=\"6\" \r\n              [(ngModel)]=\"user.lookingFor\"></textarea>\r\n              <h4>Interests</h4>\r\n              <textarea class=\"form-control\" name=\"interests\" rows=\"6\" \r\n              [(ngModel)]=\"user.interests\"></textarea>\r\n              <h4>Location Details:</h4>\r\n              <div class=\"form-inline\">\r\n                <label for=\"city\">City</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"city\" [(ngModel)]=\"user.city\">\r\n                <label for=\"city\">Country</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"country\" [(ngModel)]=\"user.country\">\r\n              </div>                \r\n            </form>\r\n          </tab>\r\n          <tab heading=\"Edit Photos\">\r\n            <app-photo-editor [photos] = 'user.photos' (getNewMainPhoto)=\"updateMainPhoto($event)\"></app-photo-editor>\r\n          </tab>              \r\n        </tabset>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>    \r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../_models/user';\nimport { UserService } from '../../_services/user.service';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Pagination, PaginationResult } from '../../_models/Pagination'\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  users: User[];\n  user: User = JSON.parse(localStorage.getItem('user'));\n  genderList = [ { value: 'male', display: 'Males'}, { value: 'female', display: 'Females'}];\n  userParams: any = {};\n  pagination: Pagination;\n\n  constructor(private userService: UserService, private alertifyService: AlertifyService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n    this.users = data['users'].result; \n    this.pagination = data['users'].pagination; });\n\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.userParams.orderBy = 'lastActive';\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n  resetFilters(){\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.loadUsers();\n  }\n\n  loadUsers(){ \n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\n    .subscribe((res: PaginationResult<User[]>) => {\n      this.users = res.result;\n      this.pagination = res.pagination;\n    }, error => {\n      this.alertifyService.error(error);\n    });\n  }\n\n}\n","<div class=\"text-center mt-3\">\n  <h2>Your matches - {{pagination.totalItems}} found</h2>\n</div>\n\n<div class=\"container mt-3\">\n  <div class=\"row\">\n    <form class=\"form-inline\" #form=\"ngForm\" (ngSubmit) = \"loadUsers()\" novalidate>\n      <div class=\"form-group\">\n        <label for=\"minAge\">Age From</label>\n        <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"minAge\" name=\"minAge\"\n          [(ngModel)]=\"userParams.minAge\" name=\"minAge\">\n      </div>\n\n      <div class=\"form-group px-2\">\n        <label for=\"maxAge\">Age To</label>\n        <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"maxAge\" name=\"maxAge\"\n        [(ngModel)]=\"userParams.maxAge\" name=\"maxAge\">\n      </div>\n\n      <div class=\"form-group px-2\">\n        <label for=\"gender\">Show: </label>\n        <select class=\"form-control ml-1\" style=\"width: 130px\" id=\"gender\" name=\"gender\" [(ngModel)]=\"userParams.gender\">\n          <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n            {{gender.display}}\n          </option>\n        </select>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-left:10px\">Apply Filters</button>\n      <button type=\"button\" (click) = \"resetFilters()\" class=\"btn btn-info\" style=\"margin-left:10px\">Reset Filter</button>\n      \n      <div class=\"col\">\n        <div class=\"btn-group float-right\">\n          <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" (click) =\"loadUsers()\" [(ngModel)]=\"userParams.orderBy\"\n            btnRadio=\"lastActive\">Last Active</button>\n          <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" (click) =\"loadUsers()\" [(ngModel)]=\"userParams.orderBy\"\n            btnRadio=\"created\">Newest Members</button>\n        </div>\n      </div>\n    </form>\n    <br>\n  </div>\n</div>\n\n<div class=\"container mt-3\">\n  <div class=\"row\">\n    <div *ngFor=\"let user of users\" class=\"col-lg-2 col-md-3 col-sm-6\">\n     <app-member-card [user]=\"user\"></app-member-card>\n    </div>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\">\n  <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" \n    [(ngModel)] =\"pagination.currentPage\" [itemsPerPage]=\"pagination.itemsPerPage\" (pageChanged) = \"pageChanged($event)\"\n    previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n  </pagination> \n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from 'src/app/_models/Message';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @Input() recipientId: number;\n  messages: Message[];\n  newMessage: any =  {};\n\n  constructor(private userService: UserService, private authService: AuthService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    const currentUserId = +this.authService.decodedToken.nameid;\n    this.userService.getMessageThread(this.authService.decodedToken.nameid, this.recipientId)\n      .pipe(\n        tap(messages => {\n          for (let i=0; i < messages.length; i++) {\n            if(messages[i].isRead === false && messages[i].recipientId === currentUserId) {\n              this.userService.markAsRead(currentUserId, messages[i].id);\n            }\n          }\n        })\n      )\n      .subscribe( messages => {\n        this.messages = messages;\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n\n  sendMessage() {\n    this.newMessage.recipientId = this.recipientId;\n    this.userService.sendMessage(this.authService.decodedToken.nameid, this.newMessage)\n      .subscribe((message: Message) => {\n        this.messages.unshift(message);\n        this.newMessage.content = '';\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <div *ngIf=\"messages?.length ===0\">\n      <p>No messages yet</p>\n    </div>\n    <ul class=\"chat\">\n      <li *ngFor=\"let message of messages\">\n        \n        \n        <div *ngIf=\"message.senderId == recipientId\">\n          <span class=\"chat-img float-left\">\n             <img src=\"{{message.senderPhotoUrl}}\" alt=\"{{message.senderKnownAs}}\" class=\"rounded-circle\">\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">\n              <strong class=\"primary-font\">{{message.senderKnownAs}}</strong>\n              <small class=\"text-muted float-right\">\n                <span class=\"fa fa-clock-o\">{{message.messageSent}}</span>\n              </small>\n            </div>\n            <p>{{message.content}}</p>\n          </div>\n        </div>\n\n        <div *ngIf=\"message.senderId != recipientId\">\n          <span class=\"chat-img float-right\">\n             <img src=\"{{message.senderPhotoUrl}}\" alt=\"{{message.senderKnownAs}}\" class=\"rounded-circle\">\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">\n              <small class=\"text-muted\">\n                <span class=\"fa fa-clock-o\">{{message.messageSent}}</span>\n                <span *ngIf=\"!message.isRead\" class=\"text-danger\">(unread)</span>\n                <span *ngIf=\"message.isRead\" class=\"text-success\">(Read {{message.datRead}})</span>\n              </small>\n              <strong class=\"primary-font float-right\">{{message.senderKnownAs}}</strong>  \n            </div>\n            <p>{{message.content}}</p>\n          </div>\n        </div>\n        \n      </li>\n    </ul>\n  </div>\n\n  <div class=\"card-footer\">\n    <form #messageForm=\"ngForm\" (ngSubmit)=\"messageForm.valid && sendMessage()\">\n      <div class=\"input-group\">\n        <input type=\"text\" [(ngModel)] =\"newMessage.content\" name=\"content\" required\n        class=\"form-control input-sm\" placeholder=\"send a private message\">\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-primary\" [disabled]=\"!messageForm.valid\">Send</button>\n        </div>\n      </div>\n    </form>\n  </div>  \n</div>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { Photo } from 'src/app/_models/photo';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { UserService } from 'src/app/_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-photo-editor',\r\n  templateUrl: './photo-editor.component.html',\r\n  styleUrls: ['./photo-editor.component.css']\r\n})\r\nexport class PhotoEditorComponent implements OnInit {\r\n  @Input() photos: Photo[];\r\n  @Output() getNewMainPhoto = new EventEmitter<string>();\r\n  uploader: FileUploader;\r\n  hasBaseDropZoneOver: boolean;\r\n  baseUrl =  environment.apiUrl;\r\n  currentMainPhoto: Photo;\r\n\r\n  constructor(private authService: AuthService, private alertifyService: AlertifyService,\r\n              private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    this.intializeUploader();\r\n  }\r\n\r\n  fileOverBase(e: any): void {\r\n    this.hasBaseDropZoneOver = e;\r\n  }\r\n\r\n  intializeUploader() {\r\n    this.uploader = new FileUploader(\r\n    {\r\n      url: this.baseUrl + 'users/' + this.authService.decodedToken.nameid + '/photos',\r\n      authToken: 'Bearer ' + localStorage.getItem('token'),\r\n      isHTML5: true,\r\n      allowedFileType: ['image'],\r\n      removeAfterUpload: true,\r\n      autoUpload: false,\r\n      maxFileSize: 10 * 1024 * 1024\r\n    });\r\n\r\n    this.uploader.onAfterAddingFile = (file) =>\r\n      { file.withCredentials = false };\r\n\r\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\r\n      if(response) {\r\n        const res: Photo = JSON.parse(response);\r\n        const photo = {\r\n          id: res.id,\r\n          url: res.url,\r\n          dateAdded: res.dateAdded,\r\n          description: res.description,\r\n          isMain: res.isMain\r\n        };\r\n\r\n        this.photos.push(photo);\r\n        if (photo.isMain) {\r\n          this.authService.changeMemberPhoto(photo.url);\r\n          this.authService.currentUser.photoUrl = photo.url;\r\n          localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setMainPhoto(photo: Photo){\r\n    this.userService.setMainPhoto(this.authService.decodedToken.nameid, photo.id).subscribe(() => {\r\n      this.currentMainPhoto = this.photos.filter(p => p.isMain === true)[0];\r\n      this.currentMainPhoto.isMain = false;\r\n      this.getNewMainPhoto.emit(photo.url);\r\n      this.authService.changeMemberPhoto(photo.url);\r\n      this.authService.currentUser.photoUrl = photo.url;\r\n      localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\r\n      photo.isMain = true;\r\n    }, error => {\r\n      this.alertifyService.error(error);\r\n    }\r\n    );\r\n  }\r\n\r\n  deletePhoto(id: number) {\r\n    this.alertifyService.confirm('Are you sure to delete photo', () => {\r\n      this.userService.deletePhoto(this.authService.decodedToken.nameid, id). subscribe( () => {\r\n        this.photos.splice(this.photos.findIndex(p => p.id === id), 1);\r\n        this.alertifyService.success('Photo has been deleted');\r\n      }), error => {\r\n        this.alertifyService.error('Failed to delete the photo');\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-sm-2\" *ngFor=\"let photo of photos\">\r\n    <img src=\"{{photo.url}}\" alt=\"\" class=\"thumbnail p-1\">\r\n    <div class=\"text-center\">\r\n      <button type=\"button\" class=\"btn btn-sm mr-1\" (click) = \"setMainPhoto(photo)\" [disabled] = \"photo.isMain\"\r\n        [ngClass]=\" photo.isMain ?  'btn btn-success' : 'btn-default'\"\r\n        >Main</button>\r\n      <button type=\"button\" (click) = \"deletePhoto(photo.id)\" [disabled] = \"photo.isMain\"\r\n        class=\"btn btn-sm btn-danger\">\r\n        <i class=\"fa fa-trash-o\"></i>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div> \r\n\r\n<div class=\"row mt-3\">\r\n \r\n  <div class=\"col-md-3\">\r\n\r\n      <h3>Add Photos</h3>\r\n\r\n      <div ng2FileDrop\r\n           [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\"\r\n           (fileOver)=\"fileOverBase($event)\"\r\n           [uploader]=\"uploader\"\r\n           class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\r\n          <i class=\"fa fa-upload fa-3x\"></i>\r\n          Drop Photos Here\r\n      </div>\r\n\r\n      Multiple\r\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\r\n\r\n      Single\r\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\r\n  </div>\r\n\r\n  <div class=\"col-md-9\" *ngIf=\"uploader?.queue?.length\"  style=\"margin-bottom: 40px\">\r\n\r\n      <h3>Upload queue</h3>\r\n      <p>Queue length: {{ uploader?.queue?.length }}</p>\r\n\r\n      <table class=\"table\">\r\n          <thead>\r\n          <tr>\r\n              <th width=\"50%\">Name</th>\r\n              <th>Size</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr *ngFor=\"let item of uploader.queue\">\r\n              <td><strong>{{ item?.file?.name }}</strong></td>\r\n              <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\r\n          </tr>\r\n          </tbody>\r\n      </table>\r\n\r\n      <div>\r\n          <div>\r\n              Queue progress:\r\n              <div class=\"progress mb-4\" style=\"\">\r\n                  <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\r\n              </div>\r\n          </div>\r\n          <button type=\"button\" class=\"btn btn-success btn-s\"\r\n                  (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\r\n              <span class=\"fa fa-upload\"></span> Upload\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-warning btn-s\"\r\n                  (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\r\n              <span class=\"fa fa-ban\"></span> Cancel\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-danger btn-s\"\r\n                  (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\r\n              <span class=\"fa fa-trash\"></span> Remove\r\n          </button>\r\n      </div>\r\n\r\n  </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from '../_services/user.service';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Message } from '../_models/Message';\nimport { Pagination, PaginationResult } from '../_models/Pagination';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer ='Unread';\n\n  constructor(private userService: UserService, private authService: AuthService, \n              private route: ActivatedRoute, private alertify: AlertifyService) \n              { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\n      this.pagination = data['messages'].pagination;\n    })\n  }\n\n  loadMessages() {\n    this.userService.getMessages(this.authService.decodedToken.nameid, this.pagination.currentPage,\n      this.pagination.itemsPerPage, this.messageContainer)\n      .subscribe((res: PaginationResult<Message[]>) => {\n        this.messages = res.result;\n        this.pagination = res.pagination; \n      }, error => {\n        this.alertify.error(error);\n      });\n\n  }\n\n  deleteMessage(id: number) {\n    this.alertify.confirm('Are you sure to delete this messsage', () => {\n      this.userService.deleteMessage(id, this.authService.decodedToken.nameid).subscribe(() => {\n        this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\n        this.alertify.success('Message has been deleted');\n      }, error => {\n        this.alertify.error(error);\n      });      \n    });\n  }\n   \n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n\n}\n","<div class=\"container mt-5\">\r\n    <div class=\"row\">\r\n      <div class=\"btn-group\">\r\n        <button class=\"btn btn-primary\" [(ngModel)]=\"messageContainer\" btnRadio=\"Unread\" (click)=\"loadMessages()\">\r\n          <i class=\"fa fa-envelope\"></i> Unread\r\n        </button>\r\n        <button class=\"btn btn-primary\" [(ngModel)]=\"messageContainer\" btnRadio=\"Inbox\" (click)=\"loadMessages()\">\r\n          <i class=\"fa fa-envelope-open\"></i> Inbox\r\n        </button>\r\n        <button class=\"btn btn-primary\" [(ngModel)]=\"messageContainer\" btnRadio=\"Outbox\" (click)=\"loadMessages()\">\r\n          <i class=\"fa fa-paper-plane\"></i> Outbox\r\n        </button>\r\n      </div>\r\n    </div>\r\n  \r\n    <div class=\"row\" *ngIf=\"messages.length == 0\">\r\n      <h3>No messages</h3>\r\n    </div>\r\n  \r\n    <div class=\"row\" *ngIf=\"messages.length > 0\">\r\n      <table class=\"table table-hover\" style=\"cursor: pointer\">\r\n        <tr>\r\n          <th style=\"width: 40%\">Message</th>\r\n          <th style=\"width: 20%\">From / To</th>\r\n          <th style=\"width: 20%\">Sent / Received</th>\r\n          <th style=\"width: 20%\"></th>\r\n        </tr>\r\n        <tr *ngFor=\"let message of messages\" [routerLink]=\"['/members', \r\n          messageContainer == 'Outbox' ? message.recipientId : message.senderId]\" [queryParams]=\"{tab: 3}\">\r\n          <td>{{message.content}}</td>\r\n          <td>\r\n            <div *ngIf=\"messageContainer != 'Outbox'\">\r\n                  <img src={{message?.senderPhotoUrl}} class=\"img-circle rounded-circle mr-1\">\r\n                  <strong>{{message.senderKnownAs}}</strong>\r\n            </div>\r\n            <div *ngIf=\"messageContainer == 'Outbox'\">\r\n                  <img src={{message?.recipientPhotoUrl}} class=\"img-circle rounded-circle\">\r\n                  <strong>{{message.recipientKnownAs}}</strong>\r\n            </div>\r\n          </td>\r\n          <td>{{message?.messageSent }}</td>\r\n          <td>\r\n            <button (click)=\"deleteMessage(message.id)\" (click)=\"$event.stopPropagation()\" class=\"btn btn-danger\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n  \r\n    </div>\r\n  \r\n  </div>\r\n  \r\n  <div class=\"d-flex justify-content-center\">\r\n      <pagination [boundaryLinks]=\"true\" \r\n                  [totalItems]=\"pagination.totalItems\"\r\n                  [itemsPerPage]=\"pagination.itemsPerPage\"\r\n                  [(ngModel)]=\"pagination.currentPage\"\r\n                  (pageChanged)=\"pageChanged($event)\"\r\n                previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\r\n    </pagination>\r\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n  photoUrl: string;\n\n  constructor(public authService: AuthService, private alertifyService: AlertifyService, private router: Router) { }\n\n  ngOnInit() {\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n\n  login(){\n    this.authService.login(this.model).subscribe(\n      next => {\n        this.alertifyService.success('Login succesfuly');\n      },\n      error => {\n        this.alertifyService.success(error);\n      }, () => {\n        this.router.navigate(['./members']);\n      }\n    );\n  }\n\n  loggedIn(){\n    return this.authService.loggedIn();\n  }\n\n  loggedOut(){\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.authService.decodedToken = null;\n    this.authService.currentUser = null;\n    this.alertifyService.message('Logged out');\n    this.router.navigate(['./home']);\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark  bg-primary\">\r\n  <div class=\"container\">\r\n    <a class=\"navbar-brand\" [routerLink]=\"['/home']\">DatingApp</a>\r\n\r\n    <ul *ngIf=\"loggedIn()\" class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item active\"  routerLinkActive=\"active\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/members']\">Matches</a>\r\n      </li>\r\n      <li class=\"nav-item\"  routerLinkActive=\"active\"> \r\n        <a class=\"nav-link\" [routerLink]=\"['/lists']\">List</a>\r\n      </li>\r\n      <li class=\"nav-item\"  routerLinkActive=\"active\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/messages']\">Messages</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <div *ngIf=\"loggedIn()\" class=\"dropdown\" dropdown>\r\n      <span class=\"mr-1\">\r\n        <img src=\"{{photoUrl || '../../assets/user.png'}}\" alt=\"\">\r\n      </span>\r\n      <a class=\"dropdown-toggle text-light\" dropdownToggle>\r\n        Welcome {{ authService.decodedToken?.unique_name | titlecase }}\r\n      </a>\r\n\r\n      <div class=\"dropdown-menu mt-3\" *dropdownMenu>\r\n        <a class=\"dropdown-item\" [routerLink]=\"['/member/edit']\"><i class=\"fa fa-user\"></i>Edit Profile</a>\r\n        <div class=\"dropdown-divider\"></div>\r\n        <a class=\"dropdown-item\" (click)=\"loggedOut()\"><i class=\"fa fa-sign-out\"></i>Log out</a>\r\n      </div>\r\n    </div>\r\n\r\n    <form *ngIf=\"!loggedIn()\" #loginForm=\"ngForm\" class=\"form-inline my-2 my-lg-0\" (ngSubmit) = \"login()\">\r\n      <input class=\"form-control mr-sm-2\" type=\"text\" [(ngModel)]=\"model.username\" required name=\"username\" placeholder=\"Username\">\r\n      <input class=\"form-control mr-sm-2\" type=\"password\" [(ngModel)]=\"model.password\" required name=\"password\" placeholder=\"Password\">\r\n      <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\r\n    </form>\r\n  </div>\r\n\r\n</nav>\r\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { FormGroup, FormControl, Validators, Form, FormBuilder } from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker/public_api';\r\nimport { User } from '../_models/user';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @Output() cancelRegister = new EventEmitter();\r\n  user: User;\r\n  registerForm: FormGroup;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(private authService: AuthService, private alertifyService: AlertifyService,\r\n              private router: Router, private fb: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.bsConfig = {\r\n      containerClass: 'theme-red'\r\n    };\r\n    this.createRegisterForm();\r\n  }\r\n\r\n  createRegisterForm() {\r\n    this.registerForm = this.fb.group({\r\n      gender: ['male'],\r\n      username: ['', Validators.required],\r\n      knownAs: ['', Validators.required],\r\n      dateOfBirth: [null, Validators.required],\r\n      city: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\r\n      confirmPassword: ['', Validators.required]\r\n    }, {validator: this.passwordMatchValidator});\r\n  }\r\n\r\n  passwordMatchValidator(g: FormGroup)\r\n  {\r\n    return g.get('password').value === g.get('confirmPassword').value ? null : {'mismatch': true} ;\r\n  }\r\n\r\n  register(){\r\n    if(this.registerForm.valid){\r\n      this.user = Object.assign({}, this.registerForm.value);\r\n      this.authService.register(this.user).subscribe(() => {\r\n        this.alertifyService.success('Registration succesful');\r\n      },\r\n      error => {\r\n        this.alertifyService.error(error);\r\n      }, () => {\r\n        this.authService.login(this.user).subscribe(() => {\r\n          this.router.navigate(['/members']);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  cancel(){\r\n    this.cancelRegister.emit(false);\r\n  }\r\n}\r\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\r\n  <h2 class=\"text-center text-primary\">Sign Up</h2>\r\n  <hr>\r\n\r\n  <div class=\"form-group\">\r\n    <label class=\"control-label\" style=\"margin-right:10px\">I am a: </label>\r\n    <label class=\"radio-inline\">\r\n      <input class=\"mr-3\" type=\"radio\" value=\"male\" formControlName=\"gender\">Male\r\n    </label>\r\n    <label class=\"radio-inline ml-3\">\r\n      <input class=\"mr-3\" type=\"radio\" value=\"female\" formControlName=\"gender\">Female\r\n    </label>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <input type=\"text\" class=\"form-control\" \r\n    required formControlName=\"username\"\r\n    [ngClass]=\"{'is-invalid': registerForm.get('username').errors && registerForm.get('username').touched}\" \r\n    placeholder=\"Username\">\r\n    <div class=\"invalid-feeback\">\r\n      Please choose a username\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <input [ngClass]=\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\" class=\"form-control\"\r\n      placeholder=\"Known as\" formControlName=\"knownAs\">\r\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\">Known as is required</div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <input type=\"password\"\r\n     class=\"form-control\"\r\n     [ngClass]=\"{'is-invalid': registerForm.get('password').errors && registerForm.get('password').touched}\"  \r\n     required formControlName=\"password\" placeholder=\"Password\">\r\n    <div class=\"invalid-feeback\" \r\n    *ngIf=\"registerForm.get('password').hasError('required') &&\r\n            registerForm.get('password').touched\">\r\n      Password is required  \r\n    </div>\r\n    <div class=\"invalid-feeback\" \r\n    *ngIf=\"registerForm.get('password').hasError('minlength') &&\r\n            registerForm.get('password').touched\">\r\n      Password must be at least 4 characters  \r\n    </div>\r\n    <div class=\"invalid-feeback\" \r\n    *ngIf=\"registerForm.get('password').hasError('maxlength') &&\r\n            registerForm.get('password').touched\">\r\n      Password must be at most 8 characters   \r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <input type=\"password\" class=\"form-control\"\r\n    [ngClass]=\"{'is-invalid': registerForm.get('confirmPassword').errors && registerForm.get('confirmPassword').touched\r\n      || registerForm.get('confirmPassword').touched && registerForm.hasError('mismatch')}\"  \r\n    required formControlName=\"confirmPassword\" placeholder=\"Confirm Password\">\r\n    <div class=\"invalid-feeback\" \r\n    *ngIf=\"registerForm.get('confirmPassword').hasError('required') &&\r\n            registerForm.get('confirmPassword').touched\">\r\n      Confirm password is required  \r\n    </div>\r\n    <div class=\"invalid-feeback\" \r\n    *ngIf=\"registerForm.get('confirmPassword').touched && registerForm.hasError('mismatch')\">\r\n      Passwords must match\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <input [ngClass]=\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\" class=\"form-control\"\r\n      placeholder=\"City\" formControlName=\"city\">\r\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\">City is required</div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <input [ngClass]=\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\" class=\"form-control\"\r\n      placeholder=\"Country\" formControlName=\"country\">\r\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\">Country is required</div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <input [ngClass]=\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\" class=\"form-control\"\r\n      placeholder=\"Date of Birth\" formControlName=\"dateOfBirth\" type=\"text\" bsDatepicker [bsConfig] = \"bsConfig\" >\r\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\">Date of Birth is required</div>\r\n  </div>\r\n\r\n  <div class=\"form-group text-center\">\r\n    <button class=\"btn btn-success\" [disabled] = \"!registerForm.valid\" type=\"submit\">Register</button>\r\n    <button class=\"btn btn-default\" (click)=\"cancel()\" type=\"button\">Cancel</button>\r\n  </div>\r\n  \r\n</form>\r\n\r\n","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { MemberDetailsComponent } from './members/member-details/member-details.component';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberUsersResolver} from './_resolvers/member-users.resolver';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resover';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { PreventUnsaved } from './_guards/prevent-unsaved.guard';\r\nimport { ListResolver } from './_resolvers/list.resolver';\r\nimport { MessagesResolver } from './_resolvers/messages.resolver';\r\n\r\nexport const appRoutes: Routes = [\r\n    { path: '', component: HomeComponent},\r\n    {\r\n        path: '',\r\n        runGuardsAndResolvers: 'always',\r\n        canActivate: [AuthGuard],\r\n        children: [\r\n            { path: 'members',  component: MemberListComponent, resolve: {users: MemberUsersResolver} },\r\n            { path: 'members/:id',  component: MemberDetailsComponent, resolve: {user: MemberDetailResolver} },\r\n            { path: 'member/edit',  component: MemberEditComponent, resolve: {user: MemberEditResolver },\r\n                canDeactivate: [PreventUnsaved] },\r\n            { path: 'messages', component: MessagesComponent, resolve: {messages: MessagesResolver}},\r\n            { path: 'lists', component: ListsComponent, resolve: {users: ListResolver}}\r\n        ]\r\n    } ,\r\n    { path: '**', redirectTo: '', pathMatch: 'full'}\r\n];\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Component({\r\n  selector: 'app-value',\r\n  templateUrl: './value.component.html',\r\n  styleUrls: ['./value.component.css']\r\n})\r\nexport class ValueComponent implements OnInit {\r\n  values: any;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n    this.getValues();\r\n  }\r\n\r\n  getValues() {\r\n      this.http.get('https://localhost:5001/values').subscribe(response => {\r\n        this.values = response;\r\n      }, error => {\r\n        console.log(error);\r\n      }\r\n      );\r\n  }\r\n\r\n\r\n}\r\n","<p *ngFor=\"let value of values\">\r\n  {{ value.id }} . {{ value.name }}\r\n</p>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:5000/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}