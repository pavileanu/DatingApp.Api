{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_guards/auth.guard.ts","webpack:///src/app/_guards/prevent-unsaved.guard.ts","webpack:///src/app/_models/Pagination.ts","webpack:///src/app/_resolvers/list.resolver.ts","webpack:///src/app/_resolvers/member-detail.resolver.ts","webpack:///src/app/_resolvers/member-edit.resover.ts","webpack:///src/app/_resolvers/member-users.resolver.ts","webpack:///src/app/_resolvers/messages.resolver.ts","webpack:///src/app/_services/alertify.service.ts","webpack:///src/app/_services/auth.service.ts","webpack:///src/app/_services/error.interceptor.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/lists/lists.component.ts","webpack:///src/app/lists/lists.component.html","webpack:///src/app/members/member-card/member-card.component.ts","webpack:///src/app/members/member-card/member-card.component.html","webpack:///src/app/members/member-details/member-details.component.ts","webpack:///src/app/members/member-details/member-details.component.html","webpack:///src/app/members/member-edit/member-edit.component.ts","webpack:///src/app/members/member-edit/member-edit.component.html","webpack:///src/app/members/member-list/member-list.component.ts","webpack:///src/app/members/member-list/member-list.component.html","webpack:///src/app/members/member-messages/member-messages.component.ts","webpack:///src/app/members/member-messages/member-messages.component.html","webpack:///src/app/members/photo-editor/photo-editor.component.ts","webpack:///src/app/members/photo-editor/photo-editor.component.html","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/routes.ts","webpack:///src/app/value/value.component.ts","webpack:///src/app/value/value.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuard","authService","router","alertifyService","loggedIn","error","navigate","providedIn","PreventUnsaved","component","editForm","dirty","confirm","PaginationResult","ListResolver","userService","alertify","pageNumber","pageSize","likesParams","route","getUsers","pipe","MemberDetailResolver","getUser","params","MemberEditResolver","decodedToken","nameid","MemberUsersResolver","MessagesResolver","messageContainer","getMessages","AlertifyService","message","okCallBack","AuthService","http","baseUrl","apiUrl","jwtHelper","photoUrl","currentPhotoUrl","asObservable","next","model","post","response","user","localStorage","setItem","token","JSON","stringify","currentUser","decodeToken","changeMemberPhoto","getItem","isTokenExpired","ErrorInterceptor","handle","status","statusText","name","applicationError","headers","get","serverError","modalStateErrors","errors","key","ErrorInterceptorProvider","provide","useClass","multi","UserService","page","itemsPerPage","userParams","likesParam","paginatedResult","append","minAge","maxAge","gender","orderBy","observe","result","body","pagination","parse","put","userId","recipientId","messageId","subscribe","AppComponent","selector","templateUrl","styleUrls","tokenGetter","CustomHammerConfig","overrides","pinch","enable","rotate","AppModule","forRoot","config","whitelistedDomains","blacklistedRoutes","declarations","imports","providers","bootstrap","HomeComponent","registerMode","ListsComponent","data","users","currentPage","res","event","loadUsers","pageChanged","MemberCardComponent","sendLike","success","knownAs","MemberDetailsComponent","queryParams","selectedTab","memberTabs","tabs","active","galleryOptions","width","height","imagePercent","thumbnailsColumns","imageAnimation","Slide","preview","breakpoint","thumbnailsPercent","thumbnailsMargin","thumbnailMargin","galleryImages","getImages","imagesUrls","photos","photo","push","small","url","medium","big","description","tabId","selectTab","MemberEditComponent","$event","returnValue","updateUser","reset","updateMainPhoto","MemberListComponent","genderList","value","display","resetFilters","MemberMessagesComponent","newMessage","loadMessages","currentUserId","getMessageThread","messages","i","length","isRead","markAsRead","sendMessage","unshift","content","uploader","PhotoEditorComponent","getNewMainPhoto","intializeUploader","hasBaseDropZoneOver","authToken","isHTML5","allowedFileType","removeAfterUpload","autoUpload","maxFileSize","onAfterAddingFile","file","withCredentials","onSuccessItem","item","dateAdded","isMain","setMainPhoto","currentMainPhoto","filter","p","emit","deletePhoto","splice","findIndex","fileOverBase","stopPropagation","MessagesComponent","deleteMessage","m","NavComponent","login","removeItem","RegisterComponent","fb","cancelRegister","bsConfig","containerClass","createRegisterForm","registerForm","group","username","required","dateOfBirth","city","country","password","minLength","maxLength","confirmPassword","validator","passwordMatchValidator","g","valid","Object","assign","register","cancel","appRoutes","path","runGuardsAndResolvers","canActivate","children","canDeactivate","redirectTo","pathMatch","ValueComponent","getValues","values","console","log","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,S;AACX,yBAAoBC,WAApB,EAAsDC,MAAtD,EAA8EC,eAA9E,EAAgH;AAAA;;AAA5F,aAAAF,WAAA,GAAAA,WAAA;AAAkC,aAAAC,MAAA,GAAAA,MAAA;AAAwB,aAAAC,eAAA,GAAAA,eAAA;AAAoC;;;;sCAEvG;AACT,cAAI,KAAKF,WAAL,CAAiBG,QAAjB,EAAJ,EAAiC;AAC/B,mBAAO,IAAP;AACD;;AAED,eAAKD,eAAL,CAAqBE,KAArB,CAA2B,YAA3B;AACA,eAAKH,MAAL,CAAYI,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACA,iBAAO,KAAP;AACD;;;;;;;uBAXUN,S,EAAS,0H,EAAA,8G,EAAA,kI;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAFR;;;;;sEAEDA,S,EAAS;cAHrB,wDAGqB;eAHV;AACVO,oBAAU,EAAE;AADF,S;AAGU,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACRtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaC,c;;;;;;;sCACKC,S,EAAgC;AAC1C,cAAGA,SAAS,CAACC,QAAV,CAAmBC,KAAtB,EAA4B;AACxB,mBAAOC,OAAO,CAAC,kDAAD,CAAd;AACH;;AACD,iBAAO,IAAP;AACH;;;;;;;uBANQJ,c;AAAc,K;;;aAAdA,c;AAAc,eAAdA,cAAc;;;;;sEAAdA,c,EAAc;cAD1B;AAC0B,Q;;;;;;;;;;;;;;;;;;ACE3B;AAAA;;;AAAA;AAAA;AAAA;;QAAaK,gB;;;;;;;;;;;;;;;;;;;ACPb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,Y;AAKT,4BAAoBC,WAApB,EACoBb,MADpB,EAC4Cc,QAD5C,EACqE;AAAA;;AADjD,aAAAD,WAAA,GAAAA,WAAA;AACA,aAAAb,MAAA,GAAAA,MAAA;AAAwB,aAAAc,QAAA,GAAAA,QAAA;AAL5C,aAAAC,UAAA,GAAa,CAAb;AACA,aAAAC,QAAA,GAAW,CAAX;AACA,aAAAC,WAAA,GAAc,QAAd;AAIE;;;;gCAEMC,K,EAA6B;AAAA;;AACjC,iBAAO,KAAKL,WAAL,CAAiBM,QAAjB,CAA0B,KAAKJ,UAA/B,EAA2C,KAAKC,QAAhD,EAA0D,IAA1D,EAAgE,KAAKC,WAArE,EAAkFG,IAAlF,CACH,kEAAW,UAAAjB,KAAK,EAAI;AAChB,iBAAI,CAACW,QAAL,CAAcX,KAAd,CAAoB,yBAApB;;AACA,iBAAI,CAACH,MAAL,CAAYI,QAAZ,CAAqB,CAAC,OAAD,CAArB;;AACA,mBAAO,gDAAG,IAAH,CAAP;AACH,WAJD,CADG,CAAP;AAOH;;;;;;;uBAjBQQ,Y,EAAY,0H,EAAA,8G,EAAA,kI;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY;;;;;sEAAZA,Y,EAAY;cADxB;AACwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACTzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaS,oB;AACT,oCAAoBR,WAApB,EACoBb,MADpB,EAC4Cc,QAD5C,EACqE;AAAA;;AADjD,aAAAD,WAAA,GAAAA,WAAA;AACA,aAAAb,MAAA,GAAAA,MAAA;AAAwB,aAAAc,QAAA,GAAAA,QAAA;AAC1C;;;;gCAEMI,K,EAA6B;AAAA;;AACjC,iBAAO,KAAKL,WAAL,CAAiBS,OAAjB,CAAyBJ,KAAK,CAACK,MAAN,CAAa,IAAb,CAAzB,EAA6CH,IAA7C,CACH,kEAAW,UAAAjB,KAAK,EAAI;AAChB,kBAAI,CAACW,QAAL,CAAcX,KAAd,CAAoB,yBAApB;;AACA,kBAAI,CAACH,MAAL,CAAYI,QAAZ,CAAqB,CAAC,UAAD,CAArB;;AACA,mBAAO,gDAAG,IAAH,CAAP;AACH,WAJD,CADG,CAAP;AAOH;;;;;;;uBAbQiB,oB,EAAoB,0H,EAAA,8G,EAAA,kI;AAAA,K;;;aAApBA,oB;AAAoB,eAApBA,oBAAoB;;;;;sEAApBA,oB,EAAoB;cADhC;AACgC,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACTjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaG,kB;AACT,kCAAoBX,WAApB,EAAsDd,WAAtD,EACoBC,MADpB,EAC4Cc,QAD5C,EACqE;AAAA;;AADjD,aAAAD,WAAA,GAAAA,WAAA;AAAkC,aAAAd,WAAA,GAAAA,WAAA;AAClC,aAAAC,MAAA,GAAAA,MAAA;AAAwB,aAAAc,QAAA,GAAAA,QAAA;AAC1C;;;;gCAEMI,K,EAA6B;AAAA;;AACjC,iBAAO,KAAKL,WAAL,CAAiBS,OAAjB,CAAyB,KAAKvB,WAAL,CAAiB0B,YAAjB,CAA8BC,MAAvD,EAA+DN,IAA/D,CACH,kEAAW,UAAAjB,KAAK,EAAI;AAChB,kBAAI,CAACW,QAAL,CAAcX,KAAd,CAAoB,yBAApB;;AACA,kBAAI,CAACH,MAAL,CAAYI,QAAZ,CAAqB,CAAC,OAAD,CAArB;;AACA,mBAAO,gDAAG,IAAH,CAAP;AACH,WAJD,CADG,CAAP;AAOH;;;;;;;uBAbQoB,kB,EAAkB,0H,EAAA,0H,EAAA,8G,EAAA,kI;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB;;;;;sEAAlBA,kB,EAAkB;cAD9B;AAC8B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACV/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaG,mB;AAIT,mCAAoBd,WAApB,EACoBb,MADpB,EAC4Cc,QAD5C,EACqE;AAAA;;AADjD,aAAAD,WAAA,GAAAA,WAAA;AACA,aAAAb,MAAA,GAAAA,MAAA;AAAwB,aAAAc,QAAA,GAAAA,QAAA;AAJ5C,aAAAC,UAAA,GAAa,CAAb;AACA,aAAAC,QAAA,GAAW,CAAX;AAIE;;;;gCAEME,K,EAA6B;AAAA;;AACjC,iBAAO,KAAKL,WAAL,CAAiBM,QAAjB,CAA0B,KAAKJ,UAA/B,EAA2C,KAAKC,QAAhD,EAA0DI,IAA1D,CACH,kEAAW,UAAAjB,KAAK,EAAI;AAChB,kBAAI,CAACW,QAAL,CAAcX,KAAd,CAAoB,yBAApB;;AACA,kBAAI,CAACH,MAAL,CAAYI,QAAZ,CAAqB,CAAC,OAAD,CAArB;;AACA,mBAAO,gDAAG,IAAH,CAAP;AACH,WAJD,CADG,CAAP;AAOH;;;;;;;uBAhBQuB,mB,EAAmB,0H,EAAA,8G,EAAA,kI;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB;;;;;sEAAnBA,mB,EAAmB;cAD/B;AAC+B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACThC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaC,gB;AAKT,gCAAoBf,WAApB,EAAsDd,WAAtD,EACoBC,MADpB,EAC4Cc,QAD5C,EACqE;AAAA;;AADjD,aAAAD,WAAA,GAAAA,WAAA;AAAkC,aAAAd,WAAA,GAAAA,WAAA;AAClC,aAAAC,MAAA,GAAAA,MAAA;AAAwB,aAAAc,QAAA,GAAAA,QAAA;AAL5C,aAAAC,UAAA,GAAa,CAAb;AACA,aAAAC,QAAA,GAAW,CAAX;AACA,aAAAa,gBAAA,GAAmB,QAAnB;AAIE;;;;gCAEMX,K,EAA6B;AAAA;;AACjC,iBAAO,KAAKL,WAAL,CAAiBiB,WAAjB,CAA6B,KAAK/B,WAAL,CAAiB0B,YAAjB,CAA8BC,MAA3D,EACH,KAAKX,UADF,EACc,KAAKC,QADnB,EAC6B,KAAKa,gBADlC,EACoDT,IADpD,CAEH,kEAAW,UAAAjB,KAAK,EAAI;AAChB,kBAAI,CAACW,QAAL,CAAcX,KAAd,CAAoB,yBAApB;;AACA,kBAAI,CAACH,MAAL,CAAYI,QAAZ,CAAqB,CAAC,OAAD,CAArB;;AACA,mBAAO,gDAAG,IAAH,CAAP;AACH,WAJD,CAFG,CAAP;AAQH;;;;;;;uBAlBQwB,gB,EAAgB,0H,EAAA,0H,EAAA,8G,EAAA,kI;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB;;;;;sEAAhBA,gB,EAAgB;cAD5B;AAC4B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACX7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;QAMaG,e;AAEb,iCAAc;AAAA;AAAG;;;;gCAEPC,O,EAAiBC,U,EAAqB;AAC5C,6DAAiBD,OAAjB,EAA0B,UAACzC,CAAD,EAAY;AACpC,gBAAIA,CAAJ,EAAO;AACL0C,wBAAU;AACX,aAFD,MAGK,CAAE;AAER,WAND;AAOD;;;gCAEOD,O,EAAe;AACrB,6DAAiBA,OAAjB;AACD;;;8BAEKA,O,EAAe;AACnB,2DAAeA,OAAf;AACD;;;gCAEOA,O,EAAe;AACrB,6DAAiBA,OAAjB;AACD;;;gCAEOA,Q,EAAe;AACrB,6DAAiBA,QAAjB;AACD;;;;;;;uBA5BUD,e;AAAe,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACV1B,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;ACN5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWa6B,W;AAQX,2BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAPpB,aAAAC,OAAA,GAAU,sEAAYC,MAAZ,GAAqB,OAA/B;AACA,aAAAC,SAAA,GAAY,IAAI,mEAAJ,EAAZ;AAGA,aAAAC,QAAA,GAAW,IAAI,oDAAJ,CAA4B,uBAA5B,CAAX;AACA,aAAAC,eAAA,GAAkB,KAAKD,QAAL,CAAcE,YAAd,EAAlB;AAEyC;;;;0CAEvBF,Q,EAAkB;AAClC,eAAKA,QAAL,CAAcG,IAAd,CAAmBH,QAAnB;AACD;;;8BAEKI,K,EAAU;AAAA;;AAEd,iBAAO,KAAKR,IAAL,CAAUS,IAAV,CAAe,KAAKR,OAAL,GAAe,OAA9B,EAAuCO,KAAvC,EACJvB,IADI,CAEH,2DAAI,UAACyB,QAAD,EAAmB;AACrB,gBAAMC,IAAI,GAAGD,QAAb;;AACA,gBAAIC,IAAJ,EAAS;AACPC,0BAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,IAAI,CAACG,KAAnC;AACAF,0BAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BE,IAAI,CAACC,SAAL,CAAeL,IAAI,CAACA,IAApB,CAA7B;AACA,oBAAI,CAACM,WAAL,GAAmBN,IAAI,CAACA,IAAxB;AACA,oBAAI,CAACrB,YAAL,GAAoB,MAAI,CAACa,SAAL,CAAee,WAAf,CAA2BP,IAAI,CAACG,KAAhC,CAApB;;AACA,oBAAI,CAACK,iBAAL,CAAuB,MAAI,CAACF,WAAL,CAAiBb,QAAxC;AACD;AACF,WATD,CAFG,CAAP;AAaD;;;iCAEQO,I,EAAU;AACjB,iBAAO,KAAKX,IAAL,CAAUS,IAAV,CAAe,KAAKR,OAAL,GAAe,UAA9B,EAA0CU,IAA1C,CAAP;AACD;;;mCAEO;AACN,cAAMG,KAAK,GAAGF,YAAY,CAACQ,OAAb,CAAqB,OAArB,CAAd;AACA,iBAAO,CAAC,KAAKjB,SAAL,CAAekB,cAAf,CAA8BP,KAA9B,CAAR;AACD;;;;;;;uBAtCUf,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACV7B,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACXxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaoD,gB;;;;;;;kCAETtE,G,EACAuD,I,EAAgD;AAEhD,iBAAOA,IAAI,CAACgB,MAAL,CAAYvE,GAAZ,EAAiBiC,IAAjB,CACH,kEAAW,UAAAjB,KAAK,EAAI;AAChB,gBAAIA,KAAK,CAACwD,MAAN,KAAiB,GAArB,EAAyB;AACrB,qBAAO,wDAAWxD,KAAK,CAACyD,UAAjB,CAAP;AACH;;AAED,gBAAIzD,KAAK,CAAC0D,IAAN,KAAe,mBAAnB,EAAwC;AACpC,kBAAMC,gBAAgB,GAAG3D,KAAK,CAAC4D,OAAN,CAAcC,GAAd,CAAkB,mBAAlB,CAAzB;;AACA,kBAAIF,gBAAJ,EAAqB;AACjB,uBAAO,wDAAWA,gBAAX,CAAP;AACH;;AACD,kBAAMG,WAAW,GAAG9D,KAAK,CAACA,KAA1B;AACA,kBAAI+D,gBAAgB,GAAG,EAAvB;;AACA,kBAAID,WAAW,CAACE,MAAZ,IAAsB,OAAOF,WAAW,CAACE,MAAnB,KAA+B,QAAzD,EAAmE;AAC/D,qBAAK,IAAMC,GAAX,IAAkBH,WAAW,CAACE,MAA9B,EAAsC;AAClC,sBAAIF,WAAW,CAACE,MAAZ,CAAmBC,GAAnB,CAAJ,EAA6B;AACzBF,oCAAgB,IAAID,WAAW,CAACE,MAAZ,CAAmBC,GAAnB,IAA0B,IAA9C;AACH;AACJ;AACJ;;AACD,qBAAO,wDAAWF,gBAAgB,IAAID,WAApB,IAAmC,cAA9C,CAAP;AACH;AACJ,WArBD,CADG,CAAP;AAwBD;;;;;;;uBA7BUR,gB;AAAgB,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB;;;;;sEAAhBA,gB,EAAgB;cAD5B;AAC4B,Q;;;AAgCtB,QAAMY,wBAAwB,GAAG;AACpCC,aAAO,EAAE,sEAD2B;AAEpCC,cAAQ,EAAEd,gBAF0B;AAGpCe,WAAK,EAAE;AAH6B,KAAjC;;;;;;;;;;;;;;;;ACtCP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAeaC,W;AAGX,2BAAoBtC,IAApB,EAA8CpC,WAA9C,EAAwE;AAAA;;AAApD,aAAAoC,IAAA,GAAAA,IAAA;AAA0B,aAAApC,WAAA,GAAAA,WAAA;AAF9C,aAAAqC,OAAA,GAAU,sEAAYC,MAAtB;AAE2E;;;;iCAElEqC,I,EAAOC,Y,EAAeC,U,EAAaC,U,EAAW;AACrD,cAAIC,eAAe,GAA6B,IAAI,mEAAJ,EAAhD;AACA,cAAIvD,MAAM,GAAG,IAAI,+DAAJ,EAAb;;AAEA,cAAGmD,IAAI,IAAI,IAAR,IAAgBC,YAAY,IAAG,IAAlC,EAAuC;AACrCpD,kBAAM,GAAGA,MAAM,CAACwD,MAAP,CAAc,YAAd,EAA4BL,IAA5B,CAAT;AACAnD,kBAAM,GAAGA,MAAM,CAACwD,MAAP,CAAc,UAAd,EAA0BJ,YAA1B,CAAT;AACD;;AAED,cAAGC,UAAU,IAAI,IAAjB,EAAuB;AACrBrD,kBAAM,GAAGA,MAAM,CAACwD,MAAP,CAAc,QAAd,EAAwBH,UAAU,CAACI,MAAnC,CAAT;AACAzD,kBAAM,GAAGA,MAAM,CAACwD,MAAP,CAAc,QAAd,EAAwBH,UAAU,CAACK,MAAnC,CAAT;AACA1D,kBAAM,GAAGA,MAAM,CAACwD,MAAP,CAAc,QAAd,EAAwBH,UAAU,CAACM,MAAnC,CAAT;AACA3D,kBAAM,GAAGA,MAAM,CAACwD,MAAP,CAAc,SAAd,EAAyBH,UAAU,CAACO,OAApC,CAAT;AACD;;AAED,cAAIN,UAAU,KAAK,QAAnB,EAA6B;AAC3BtD,kBAAM,GAAGA,MAAM,CAACwD,MAAP,CAAc,QAAd,EAAwB,MAAxB,CAAT;AACD;;AACD,cAAIF,UAAU,KAAK,QAAnB,EAA6B;AAC3BtD,kBAAM,GAAGA,MAAM,CAACwD,MAAP,CAAc,QAAd,EAAwB,MAAxB,CAAT;AACD;;AAED,iBAAO,KAAK5C,IAAL,CAAU6B,GAAV,CAAsB,KAAK5B,OAAL,GAAe,OAArC,EAA8C;AAACgD,mBAAO,EAAE,UAAV;AAAsB7D,kBAAM,EAANA;AAAtB,WAA9C,EACJH,IADI,CAEH,2DAAI,UAAAyB,QAAQ,EAAI;AACdiC,2BAAe,CAACO,MAAhB,GAAyBxC,QAAQ,CAACyC,IAAlC;;AACA,gBAAGzC,QAAQ,CAACkB,OAAT,CAAiBC,GAAjB,CAAqB,YAArB,KAAsC,IAAzC,EAA+C;AAC7Cc,6BAAe,CAACS,UAAhB,GAA6BrC,IAAI,CAACsC,KAAL,CAAW3C,QAAQ,CAACkB,OAAT,CAAiBC,GAAjB,CAAqB,YAArB,CAAX,CAA7B;AACD;;AACD,mBAAOc,eAAP;AACD,WAND,CAFG,CAAP;AAUD;;;gCAEOjF,E,EAAU;AAChB,iBAAO,KAAKsC,IAAL,CAAU6B,GAAV,CAAoB,KAAK5B,OAAL,GAAe,QAAf,GAA0BvC,EAA9C,CAAP;AACD;;;mCAEUA,E,EAAYiD,I,EAAU;AAC/B,iBAAO,KAAKX,IAAL,CAAUsD,GAAV,CAAoB,KAAKrD,OAAL,GAAe,QAAf,GAA0BvC,EAA9C,EAAkDiD,IAAlD,CAAP;AACD;;;qCAEY4C,M,EAAgB7F,E,EAAY;AACvC,iBAAO,KAAKsC,IAAL,CAAUS,IAAV,CAAe,KAAKR,OAAL,GAAe,QAAf,GAA0BsD,MAA1B,GAAoC,UAApC,GAAiD7F,EAAjD,GAAsD,UAArE,EAAiF,EAAjF,CAAP;AACD;;;oCAEW6F,M,EAAgB7F,E,EAAY;AACtC,iBAAO,KAAKsC,IAAL,WAAiB,KAAKC,OAAL,GAAe,QAAf,GAA0BsD,MAA1B,GAAoC,UAApC,GAAiD7F,EAAlE,CAAP;AACD;;;iCAEQA,E,EAAY8F,W,EAAqB;AACxC,iBAAO,KAAKxD,IAAL,CAAUS,IAAV,CAAe,KAAKR,OAAL,GAAe,QAAf,GAA0BvC,EAA1B,GAA+B,QAA/B,GAA0C8F,WAAzD,EAAsE,EAAtE,CAAP;AACD;;;oCAEW9F,E,EAAY6E,I,EAAOC,Y,EAAe9C,gB,EAAmB;AAC/D,cAAMiD,eAAe,GAAgC,IAAI,mEAAJ,EAArD;AAEA,cAAIvD,MAAM,GAAG,IAAI,+DAAJ,EAAb;AACAA,gBAAM,GAAGA,MAAM,CAACwD,MAAP,CAAc,kBAAd,EAAkClD,gBAAlC,CAAT;;AAEA,cAAG6C,IAAI,IAAI,IAAR,IAAgBC,YAAY,IAAG,IAAlC,EAAuC;AACrCpD,kBAAM,GAAGA,MAAM,CAACwD,MAAP,CAAc,YAAd,EAA4BL,IAA5B,CAAT;AACAnD,kBAAM,GAAGA,MAAM,CAACwD,MAAP,CAAc,UAAd,EAA0BJ,YAA1B,CAAT;AACD;;AAED,iBAAO,KAAKxC,IAAL,CAAU6B,GAAV,CAAyB,KAAK5B,OAAL,GAAe,QAAf,GAA0BvC,EAA1B,GAA+B,WAAxD,EAAqE;AAACuF,mBAAO,EAAE,UAAV;AAAsB7D,kBAAM,EAANA;AAAtB,WAArE,EACJH,IADI,CAEH,2DAAI,UAAAyB,QAAQ,EAAI;AACdiC,2BAAe,CAACO,MAAhB,GAAyBxC,QAAQ,CAACyC,IAAlC;;AACA,gBAAIzC,QAAQ,CAACkB,OAAT,CAAiBC,GAAjB,CAAqB,YAArB,MAAuC,IAA3C,EAAiD;AAC/Cc,6BAAe,CAACS,UAAhB,GAA6BrC,IAAI,CAACsC,KAAL,CAAW3C,QAAQ,CAACkB,OAAT,CAAiBC,GAAjB,CAAqB,YAArB,CAAX,CAA7B;AACD;;AAED,mBAAOc,eAAP;AACD,WAPD,CAFG,CAAP;AAWD;;;yCAEgBjF,E,EAAY8F,W,EAAqB;AAChD,iBAAO,KAAKxD,IAAL,CAAU6B,GAAV,CAAyB,KAAK5B,OAAL,GAAe,QAAf,GAA0BvC,EAA1B,GAA+B,mBAA/B,GAAqD8F,WAA9E,CAAP;AACD;;;oCAEW9F,E,EAAYmC,O,EAAkB;AACxC,iBAAO,KAAKG,IAAL,CAAUS,IAAV,CAAe,KAAKR,OAAL,GAAe,QAAf,GAA0BvC,EAA1B,GAA+B,WAA9C,EAA2DmC,OAA3D,CAAP;AACD;;;sCAEanC,E,EAAY6F,M,EAAc;AACtC,iBAAO,KAAKvD,IAAL,CAAUS,IAAV,CAAe,KAAKR,OAAL,GAAe,QAAf,GAA0BsD,MAA1B,GAAmC,YAAnC,GAAkD7F,EAAjE,EAAqE,EAArE,CAAP;AACD;;;mCAEU6F,M,EAAgBE,S,EAAmB;AAC5C,eAAKzD,IAAL,CAAUS,IAAV,CAAe,KAAKR,OAAL,GAAe,QAAf,GAA0BsD,MAA1B,GAAmC,YAAnC,GAAkDE,SAAlD,GAA8D,OAA7E,EAAsF,EAAtF,EACGC,SADH;AAED;;;;;;;uBAnGUpB,W,EAAW,uH,EAAA,iH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAHV;;;;;sEAGDA,W,EAAW;cAJvB,wDAIuB;eAJZ;AACVpE,oBAAU,EAAE;AADF,S;AAIY,Q;;;;;;;;;;;;;;;;;;;;;;;;ACfxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUayF,Y;AAGX,4BAAoB/F,WAApB,EAA4C;AAAA;;AAAxB,aAAAA,WAAA,GAAAA,WAAA;AAFpB,aAAAuC,SAAA,GAAY,IAAI,mEAAJ,EAAZ;AAE+C;;;;mCAEvC;AACN,cAAMW,KAAK,GAAGF,YAAY,CAACQ,OAAb,CAAqB,OAArB,CAAd;AACA,cAAMT,IAAI,GAASI,IAAI,CAACsC,KAAL,CAAWzC,YAAY,CACvCQ,OAD2B,CACnB,MADmB,CAAX,CAAnB;;AAEA,cAAIN,KAAJ,EAAW;AACT,iBAAKlD,WAAL,CAAiB0B,YAAjB,GAAgC,KAAKa,SAAL,CAAee,WAAf,CAA2BJ,KAA3B,CAAhC;AACD;;AACD,cAAIH,IAAJ,EAAU;AACR,iBAAK/C,WAAL,CAAiBqD,WAAjB,GAA+BN,IAA/B;AACA,iBAAK/C,WAAL,CAAiBuD,iBAAjB,CAAmCR,IAAI,CAACP,QAAxC;AACD;AACF;;;;;;;uBAhBUuD,Y,EAAY,mI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACVzB;;AACA;;AACA;;;;;;;;;sEDQaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;AEVzwCO,aAASC,WAAT,GAAoB;AACxB,aAAOnD,YAAY,CAACQ,OAAb,CAAqB,OAArB,CAAP;AACF;;QAEY4C,kB;;;;;AAAb;AAAA;;AAAA;;;AACG,eAAAC,SAAA,GAAY;AACTC,eAAK,EAAE;AAACC,kBAAM,EAAE;AAAT,WADE;AAETC,gBAAM,EAAE;AAACD,kBAAM,EAAE;AAAT;AAFC,SAAZ;AADH;AAKC;;;MALuC,6E;;QA8D3BE,S;;;;;YAAAA,S;AAAS,kBAJhB,4DAIgB,EAHhB,sEAGgB;;;;yBAATA,S;AAAS,O;AAAA,iBAhBR,CACR,mEADQ,EAER,qFAFQ,EAGR,uFAHQ,EAIR,qFAJQ,EAKR,kFALQ,EAMR,8EANQ,EAOR,sEAPQ,EAQR,6EARQ,EASR;AAAElC,eAAO,EAAE,+EAAX;AAAkCC,gBAAQ,EAAE4B;AAA5C,OATQ,C;AAUV,gBAhCQ,CACN,uEADM,EAEN,kEAFM,EAGN,qEAHM,EAIN,0DAJM,EAKN,4FALM,EAMN,wEAAiBM,OAAjB,EANM,EAON,4EAAmBA,OAAnB,EAPM,EAQN,2EAAiBA,OAAjB,EARM,EASN,8DAAWA,OAAX,EATM,EAUN,qEAAcA,OAAd,EAVM,EAWN,6DAAaA,OAAb,CAAqB,kDAArB,CAXM,EAYN,qEAZM,EAaN,iEAbM,EAcN,6DAAUA,OAAV,CAAmB;AAChBC,cAAM,EAAE;AACLR,qBAAW,EAAEA,WADR;AAELS,4BAAkB,EAAE,CAAC,gBAAD,CAFf;AAGLC,2BAAiB,EAAE,CAAC,qBAAD;AAHd;AADQ,OAAnB,CAdM,CAgCR;;;;0HAMSJ,S,EAAS;AAAA,uBApDhB,4DAoDgB,EAnDhB,sEAmDgB,EAlDhB,gEAkDgB,EAjDhB,mEAiDgB,EAhDhB,+EAgDgB,EA/ChB,sEA+CgB,EA9ChB,+FA8CgB,EA7ChB,+EA6CgB,EA5ChB,+FA4CgB,EA3ChB,wGA2CgB,EA1ChB,+FA0CgB,EAzChB,kGAyCgB,EAxChB,2GAwCgB;AAxCO,kBAGvB,uEAHuB,EAIvB,kEAJuB,EAKvB,qEALuB,EAMvB,0DANuB,EAOvB,4FAPuB,EAOA,uEAPA,EAOA,2EAPA,EAOA,0EAPA,EAOA,6DAPA,EAOA,oEAPA,EAOA,4DAPA,EAcvB,qEAduB,EAevB,iEAfuB,EAeP,4DAfO;AAwCP,O;AAzBA,K;;;;;sEAyBTA,S,EAAS;cAtDrB,sDAsDqB;eAtDZ;AACPK,sBAAY,EAAE,CACX,4DADW,EAEX,sEAFW,EAGX,gEAHW,EAIX,mEAJW,EAKX,+EALW,EAMX,sEANW,EAOX,+FAPW,EAQX,+EARW,EASX,+FATW,EAUX,wGAVW,EAWX,+FAXW,EAYX,kGAZW,EAaX,2GAbW,CADP;AAgBPC,iBAAO,EAAE,CACN,uEADM,EAEN,kEAFM,EAGN,qEAHM,EAIN,0DAJM,EAKN,4FALM,EAMN,wEAAiBL,OAAjB,EANM,EAON,4EAAmBA,OAAnB,EAPM,EAQN,2EAAiBA,OAAjB,EARM,EASN,8DAAWA,OAAX,EATM,EAUN,qEAAcA,OAAd,EAVM,EAWN,6DAAaA,OAAb,CAAqB,kDAArB,CAXM,EAYN,qEAZM,EAaN,iEAbM,EAcN,6DAAUA,OAAV,CAAmB;AAChBC,kBAAM,EAAE;AACLR,yBAAW,EAAEA,WADR;AAELS,gCAAkB,EAAE,CAAC,gBAAD,CAFf;AAGLC,+BAAiB,EAAE,CAAC,qBAAD;AAHd;AADQ,WAAnB,CAdM,CAhBF;AAsCPG,mBAAS,EAAE,CACR,mEADQ,EAER,qFAFQ,EAGR,uFAHQ,EAIR,qFAJQ,EAKR,kFALQ,EAMR,8EANQ,EAOR,sEAPQ,EAQR,6EARQ,EASR;AAAEzC,mBAAO,EAAE,+EAAX;AAAkCC,oBAAQ,EAAE4B;AAA5C,WATQ,CAtCJ;AAiDPa,mBAAS,EAAE,CACR,4DADQ,EAER,sEAFQ;AAjDJ,S;AAsDY,Q;;;;;;;;;;;;;;;;;;AC1GtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACCE;;AACE;;AAAI;;AAAe;;AACnB;;AAAgB;;AAAiE;;AACjF;;AACE;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAQ;;AAC9E;;AAAoC;;AAAU;;AAChD;;AACF;;;;;;;;AAEA;;AACE;;AACE;;AACE;;AAAc;AAAA;;AAAA;;AAAA;AAAA;;AAA8C;;AAC9D;;AACF;;AACF;;;;QDTWC,a;AAIX,+BAAc;AAAA;;AAFd,aAAAC,YAAA,GAAe,KAAf;AAEiB;;;;mCAEN,CACV;;;6CAEiB;AAChB,eAAKA,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACD;;;2CAEkBA,Y,EAAqB;AACtC,eAAKA,YAAL,GAAoBA,YAApB;AACD;;;;;;;uBAfUD,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,qW;AAAA;AAAA;ACP1B;;AACE;;AASA;;AAOF;;;;AAhBO;;AAAA;;AASA;;AAAA;;;;;;;;;sEDHMA,a,EAAa;cALzB,uDAKyB;eALf;AACTlB,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgBE;;AACE;;AACF;;;;;;AADmB;;AAAA;;;;QDJRkB,c;AAKX,8BAAoBpH,WAApB,EAAsDc,WAAtD,EACUK,KADV,EACyCjB,eADzC,EAC2E;AAAA;;AADvD,aAAAF,WAAA,GAAAA,WAAA;AAAkC,aAAAc,WAAA,GAAAA,WAAA;AAC5C,aAAAK,KAAA,GAAAA,KAAA;AAA+B,aAAAjB,eAAA,GAAAA,eAAA;AAAqC;;;;mCAEnE;AAAA;;AACT,eAAKiB,KAAL,CAAWkG,IAAX,CAAgBvB,SAAhB,CAA0B,UAAAuB,IAAI,EAAI;AAChC,kBAAI,CAACC,KAAL,GAAaD,IAAI,CAAC,OAAD,CAAJ,CAAc/B,MAA3B;AACA,kBAAI,CAACE,UAAL,GAAkB6B,IAAI,CAAC,OAAD,CAAJ,CAAc7B,UAAhC;AACD,WAHD;AAIA,eAAKV,UAAL,GAAkB,QAAlB;AACD;;;oCAEQ;AAAA;;AACP,eAAKhE,WAAL,CAAiBM,QAAjB,CAA0B,KAAKoE,UAAL,CAAgB+B,WAA1C,EAAuD,KAAK/B,UAAL,CAAgBZ,YAAvE,EAAqF,IAArF,EAA2F,KAAKE,UAAhG,EACCgB,SADD,CACW,UAAC0B,GAAD,EAAmC;AAC5C,kBAAI,CAACF,KAAL,GAAaE,GAAG,CAAClC,MAAjB;AACA,kBAAI,CAACE,UAAL,GAAkBgC,GAAG,CAAChC,UAAtB;AACD,WAJD,EAIG,UAAApF,KAAK,EAAI;AACV,kBAAI,CAACF,eAAL,CAAqBE,KAArB,CAA2BA,KAA3B;AACD,WAND;AAOD;;;oCAEWqH,K,EAAU;AACpB,eAAKjC,UAAL,CAAgB+B,WAAhB,GAA8BE,KAAK,CAAC9C,IAApC;AACA,eAAK+C,SAAL;AACD;;;;;;;uBA7BUN,c,EAAc,mI,EAAA,mI,EAAA,+H,EAAA,2I;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,goB;AAAA;AAAA;ACb3B;;AACE;;AAAI;;AAA2G;;AACjH;;AAEA;;AAEA;;AACE;;AACE;;AAAgC;AAAA;AAAA,aAAwB,OAAxB,EAAwB;AAAA,mBAA4B,IAAAM,SAAA,EAA5B;AAAuC,WAA/D;;AAAiE;;AAAmB;;AACpH;;AAAgC;AAAA;AAAA,aAAwB,OAAxB,EAAwB;AAAA,mBAA4B,IAAAA,SAAA,EAA5B;AAAuC,WAA/D;;AAAiE;;AAAkB;;AACrH;;AACF;;AAEA;;AAEA;;AACE;;AAGF;;AAIA;;AAEA;;AACA;;AAAiH;AAAA;AAAA,aAAoC,aAApC,EAAoC;AAAA,mBACpI,IAAAC,WAAA,QADoI;AACjH,WAD6E;;AAIjH;;AACA;;;;AA9BM;;AAAA;;AAO8B;;AAAA;;AACA;;AAAA;;AAO7B;;AAAA;;AAUK;;AAAA,0FAAsB,YAAtB,EAAsB,yBAAtB,EAAsB,cAAtB,EAAsB,2BAAtB,EAAsB,SAAtB,EAAsB,0BAAtB;;;;;;;;;sEDbCP,c,EAAc;cAL1B,uDAK0B;eALhB;AACTpB,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEb3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;QAWa0B,mB;AAGX,mCAAoB5H,WAApB,EAAsDc,WAAtD,EACoBZ,eADpB,EACsD;AAAA;;AADlC,aAAAF,WAAA,GAAAA,WAAA;AAAkC,aAAAc,WAAA,GAAAA,WAAA;AAClC,aAAAZ,eAAA,GAAAA,eAAA;AAAqC;;;;mCAE9C,CACV;;;iCAEQJ,E,EAAY;AAAA;;AACnB,eAAKgB,WAAL,CAAiB+G,QAAjB,CAA0B,KAAK7H,WAAL,CAAiB0B,YAAjB,CAA8BC,MAAxD,EAAgE7B,EAAhE,EAAoEgG,SAApE,CAA8E,UAAAuB,IAAI,EAAI;AACpF,mBAAI,CAACnH,eAAL,CAAqB4H,OAArB,CAA6B,oBAAoB,OAAI,CAAC/E,IAAL,CAAUgF,OAA3D;AACD,WAFD,EAEG,UAAA3H,KAAK,EAAI;AACV,mBAAI,CAACF,eAAL,CAAqBE,KAArB,CAA2BA,KAA3B;AACD,WAJD;AAKD;;;;;;;uBAfUwH,mB,EAAmB,0I,EAAA,0I,EAAA,kJ;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,0iB;AAAA;AAAA;ACXhC;;AACE;;AACE;;AACA;;AACE;;AAA6B;;AAA8G;;AAA0B;;AAAS;;AAC9K;;AAA6B;;AAAgC;AAAA,mBAAW,IAAAC,QAAA,aAAX;AAA4B,WAA5B;;AAA8B;;AAA2B;;AAAS;;AAC/H;;AAA6B;;AAA+F;;AAA8B;;AAAS;;AACrK;;AACF;;AACA;;AACE;;AACE;;AACA;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;;;AAhBS;;AAAA;;AAAsD;;AAEI;;AAAA;;AAEA;;AAAA,sKAAqC,aAArC,EAAqC,sEAArC;;AAM7D;;AAAA;;AAGA;;AAAA;;;;;;;;;sEDJOD,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACT5B,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;gBAC7B;;;;;;;;;;;;;;;;;;;;AEZH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;QAaa8B,sB;AAMX,sCAAoBlH,WAApB,EAAsDZ,eAAtD,EACoBiB,KADpB,EAC2C;AAAA;;AADvB,aAAAL,WAAA,GAAAA,WAAA;AAAkC,aAAAZ,eAAA,GAAAA,eAAA;AAClC,aAAAiB,KAAA,GAAAA,KAAA;AAA0B;;;;mCAEnC;AAAA;;AACT,eAAKA,KAAL,CAAWkG,IAAX,CAAgBvB,SAAhB,CAA0B,UAAAuB,IAAI,EAAI;AAChC,mBAAI,CAACtE,IAAL,GAAYsE,IAAI,CAAC,MAAD,CAAhB;AAA0B,WAD5B;AAGA,eAAKlG,KAAL,CAAW8G,WAAX,CAAuBnC,SAAvB,CAAiC,UAAAtE,MAAM,EAAI;AACzC,gBAAM0G,WAAW,GAAG1G,MAAM,CAAC,KAAD,CAA1B;AACA,mBAAI,CAAC2G,UAAL,CAAgBC,IAAhB,CAAqBF,WAAW,GAAG,CAAd,GAAkBA,WAAlB,GAAgC,CAArD,EAAwDG,MAAxD,GAAiE,IAAjE;AACD,WAHD;AAKA,eAAKC,cAAL,GAAsB,CACpB;AACEC,iBAAK,EAAE,OADT;AAEEC,kBAAM,EAAE,OAFV;AAGEC,wBAAY,EAAE,GAHhB;AAIEC,6BAAiB,EAAE,CAJrB;AAKEC,0BAAc,EAAE,wEAAoBC,KALtC;AAMEC,mBAAO,EAAE;AANX,WADoB,EASd;AACEC,sBAAU,EAAE,GADd;AAEEP,iBAAK,EAAE,MAFT;AAGEC,kBAAM,EAAE,OAHV;AAIEC,wBAAY,EAAE,EAJhB;AAKEM,6BAAiB,EAAE,EALrB;AAMEC,4BAAgB,EAAE,EANpB;AAOEC,2BAAe,EAAE;AAPnB,WATc,EAkBd;AACEH,sBAAU,EAAE,GADd;AAEED,mBAAO,EAAE;AAFX,WAlBc,CAAtB;AAwBA,eAAKK,aAAL,GAAqB,KAAKC,SAAL,EAArB;AAED;;;oCAGQ;AACP,cAAMC,UAAU,GAAG,EAAnB;;AADO,qDAEa,KAAKrG,IAAL,CAAUsG,MAFvB;AAAA;;AAAA;AAEP,gEAAsC;AAAA,kBAA3BC,KAA2B;AACpCF,wBAAU,CAACG,IAAX,CAAgB;AACdC,qBAAK,EAAEF,KAAK,CAACG,GADC;AAEdC,sBAAM,EAAEJ,KAAK,CAACG,GAFA;AAGdE,mBAAG,EAAEL,KAAK,CAACG,GAHG;AAIdG,2BAAW,EAAEN,KAAK,CAACM;AAJL,eAAhB;AAMD;AATM;AAAA;AAAA;AAAA;AAAA;;AAWP,iBAAOR,UAAP;AACD;;;kCAESS,K,EAAe;AACvB,eAAK1B,UAAL,CAAgBC,IAAhB,CAAqByB,KAArB,EAA4BxB,MAA5B,GAAqC,IAArC;AACD;;;;;;;uBA/DUL,sB,EAAsB,0I,EAAA,kJ,EAAA,+H;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA;AAAA;;;;;;;;;;;;;;;ACbnC;;AACE;;AACE;;AACE;;AACE;;AACA;;AACE;;AACE;;AAAQ;;AAAS;;AACjB;;AAAG;;AAA+B;;AACpC;;AACA;;AACE;;AAAQ;;AAAI;;AACZ;;AAAG;;AAAY;;AACjB;;AACA;;AACE;;AAAQ;;AAAY;;AACpB;;AAAG;;;;AAAwC;;AAC7C;;AACA;;AACE;;AAAQ;;AAAa;;AACrB;;AAAG;;;;AAAqC;;AAC1C;;AACA;;AACE;;AACE;;AAAsC;;AAAI;;AAC1C;;AAAsC;AAAA,mBAAS,IAAA8B,SAAA,CAAU,CAAV,CAAT;AAAqB,WAArB;;AAAuB;;AAAO;;AACtE;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAW;;AACf;;AAAG;;AAAqB;;AACxB;;AAAI;;AAAQ;;AACZ;;AAAG;;AAAmB;;AACxB;;AACA;;AACE;;AAAI;;AAAS;;AACb;;AAAG;;AAAkB;;AACvB;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEF;;AACF;;AACF;;AACF;;AACF;;;;AAnDa;;AAAA;;AAAsD;;AAIpD;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAcA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAIA;;AAAA;;AAGU;;AAAA,kGAA0B,QAA1B,EAA0B,iBAA1B;;AAGQ;;AAAA;;;;;;;;;;sEDnCpB9B,sB,EAAsB;cALlC,uDAKkC;eALxB;AACThC,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;gBAChC,uD;iBAAU,Y,EAAc;AAAC,sBAAQ;AAAT,W;;;;;;;;;;;;;;;;;;;;AEd3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACMM;;AACE;;AAAQ;;AAAY;;AAAU;;AAChC;;;;QDKO6D,mB;AAWX,mCAAoBjJ,WAApB,EAAsDZ,eAAtD,EACoBiB,KADpB,EACmDnB,WADnD,EAC2E;AAAA;;AADvD,aAAAc,WAAA,GAAAA,WAAA;AAAkC,aAAAZ,eAAA,GAAAA,eAAA;AAClC,aAAAiB,KAAA,GAAAA,KAAA;AAA+B,aAAAnB,WAAA,GAAAA,WAAA;AAClC;;;;2CAREgK,M,EAAW;AAC3B,cAAG,KAAKvJ,QAAL,CAAcC,KAAjB,EAAwB;AACtBsJ,kBAAM,CAACC,WAAP,GAAqB,IAArB;AACD;AACH;;;mCAMU;AAAA;;AACT,eAAK9I,KAAL,CAAWkG,IAAX,CAAgBvB,SAAhB,CAA0B,UAAAuB,IAAI,EAAI;AAChC,mBAAI,CAACtE,IAAL,GAAYsE,IAAI,CAAC,MAAD,CAAhB;AAA0B,WAD5B;AAEA,eAAKrH,WAAL,CAAiByC,eAAjB,CAAiCqD,SAAjC,CAA2C,UAAAtD,QAAQ;AAAA,mBAAI,OAAI,CAACA,QAAL,GAAgBA,QAApB;AAAA,WAAnD;AACD;;;qCAES;AAAA;;AACR,eAAK1B,WAAL,CAAiBoJ,UAAjB,CAA4B,KAAKlK,WAAL,CAAiB0B,YAAjB,CAA8BC,MAA1D,EAAkE,KAAKoB,IAAvE,EAA6E+C,SAA7E,CACE,UAAAgC,OAAO,EAAI;AACT,mBAAI,CAAC5H,eAAL,CAAqB4H,OAArB,CAA6B,qBAA7B;;AACA,mBAAI,CAACrH,QAAL,CAAc0J,KAAd,CAAoB,OAAI,CAACpH,IAAzB;AACD,WAJH,EAKE,UAAA3C,KAAK,EAAI;AACP,mBAAI,CAACF,eAAL,CAAqBE,KAArB,CAA2BA,KAA3B;AACD,WAPH;AAUD;;;wCAEeoC,Q,EAAgB;AAC9B,eAAKO,IAAL,CAAUP,QAAV,GAAqBA,QAArB;AACD;;;;;;;uBApCUuH,mB,EAAmB,0I,EAAA,kJ,EAAA,+H,EAAA,0I;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA;AAAA;;;;;;;;;;;;;mBAAnB,8B;AAA0B,W,EAAA,K,EAAA,6D;;;;;;;;ACbvC;;AACE;;AACE;;AACE;;AAAI;;AAAY;;AAClB;;AACA;;AACE;;AAGF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACA;;AACE;;AACE;;AAAQ;;AAAS;;AACjB;;AAAG;;AAA+B;;AACpC;;AACA;;AACE;;AAAQ;;AAAI;;AACZ;;AAAG;;AAAY;;AACjB;;AACA;;AACE;;AAAQ;;AAAY;;AACpB;;AAAG;;;;AAAyC;;AAC9C;;AACA;;AACE;;AAAQ;;AAAa;;AACrB;;AAAG;;;;AAAqC;;AAC1C;;AACA;;AACE;;AACE;;AAAmF;;AAAY;;AACjG;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAuC;AAAA,mBAAY,IAAAG,UAAA,EAAZ;AAAwB,WAAxB;;AACrC;;AAAI;;AAAW;;AACf;;AACA;AAAA;AAAA;;AAAgC;;AAChC;;AAAI;;AAAQ;;AACZ;;AACA;AAAA;AAAA;;AAA8B;;AAC9B;;AAAI;;AAAS;;AACb;;AACA;AAAA;AAAA;;AAA6B;;AAC7B;;AAAI;;AAAiB;;AACrB;;AACE;;AAAkB;;AAAI;;AACtB;;AAAoD;AAAA;AAAA;;AAApD;;AACA;;AAAkB;;AAAO;;AACzB;;AAAuD;AAAA;AAAA;;AAAvD;;AACF;;AACF;;AACF;;AACA;;AACE;;AAA2C;AAAA,mBAAmB,IAAAE,eAAA,QAAnB;AAA0C,WAA1C;;AAA4C;;AACzF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AAhEW;;AAAA;;AAQE;;AAAA;;AAAiD;;AAI/C;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIO;;AAAA;;AAaR;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAIsD;;AAAA;;AAEG;;AAAA;;AAKzC;;AAAA;;;;;;;;;;sEDnDjBL,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACT/D,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;gBAC7B,uD;iBAAU,U;;;gBAGV,0D;iBAAa,qB,EAAuB,CAAC,QAAD,C;;;;;;;;;;;;;;;;;;;;AEjBvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACsBU;;AACE;;AACF;;;;;;AAF0C;;AACxC;;AAAA;;;;;;AAsBR;;AACC;;AACD;;;;;;AADkB;;AAAA;;;;QDlCTmE,mB;AAOX,mCAAoBvJ,WAApB,EAAsDZ,eAAtD,EAAgGiB,KAAhG,EAAuH;AAAA;;AAAnG,aAAAL,WAAA,GAAAA,WAAA;AAAkC,aAAAZ,eAAA,GAAAA,eAAA;AAA0C,aAAAiB,KAAA,GAAAA,KAAA;AALhG,aAAA4B,IAAA,GAAaI,IAAI,CAACsC,KAAL,CAAWzC,YAAY,CAACQ,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,aAAA8G,UAAA,GAAa,CAAE;AAAEC,eAAK,EAAE,MAAT;AAAiBC,iBAAO,EAAE;AAA1B,SAAF,EAAsC;AAAED,eAAK,EAAE,QAAT;AAAmBC,iBAAO,EAAE;AAA5B,SAAtC,CAAb;AACA,aAAA3F,UAAA,GAAkB,EAAlB;AAG0H;;;;mCAE/G;AAAA;;AACT,eAAK1D,KAAL,CAAWkG,IAAX,CAAgBvB,SAAhB,CAA0B,UAAAuB,IAAI,EAAI;AAClC,mBAAI,CAACC,KAAL,GAAaD,IAAI,CAAC,OAAD,CAAJ,CAAc/B,MAA3B;AACA,mBAAI,CAACE,UAAL,GAAkB6B,IAAI,CAAC,OAAD,CAAJ,CAAc7B,UAAhC;AAA6C,WAF7C;AAIA,eAAKX,UAAL,CAAgBM,MAAhB,GAAyB,KAAKpC,IAAL,CAAUoC,MAAV,KAAqB,QAArB,GAAgC,MAAhC,GAAyC,QAAlE;AACA,eAAKN,UAAL,CAAgBI,MAAhB,GAAyB,EAAzB;AACA,eAAKJ,UAAL,CAAgBK,MAAhB,GAAyB,EAAzB;AACA,eAAKL,UAAL,CAAgBO,OAAhB,GAA0B,YAA1B;AACD;;;oCAEWqC,K,EAAU;AACpB,eAAKjC,UAAL,CAAgB+B,WAAhB,GAA8BE,KAAK,CAAC9C,IAApC;AACA,eAAK+C,SAAL;AACD;;;uCAEW;AACV,eAAK7C,UAAL,CAAgBM,MAAhB,GAAyB,KAAKpC,IAAL,CAAUoC,MAAV,KAAqB,QAArB,GAAgC,MAAhC,GAAyC,QAAlE;AACA,eAAKN,UAAL,CAAgBI,MAAhB,GAAyB,EAAzB;AACA,eAAKJ,UAAL,CAAgBK,MAAhB,GAAyB,EAAzB;AACA,eAAKwC,SAAL;AACD;;;oCAEQ;AAAA;;AACP,eAAK5G,WAAL,CAAiBM,QAAjB,CAA0B,KAAKoE,UAAL,CAAgB+B,WAA1C,EAAuD,KAAK/B,UAAL,CAAgBZ,YAAvE,EAAqF,KAAKC,UAA1F,EACCiB,SADD,CACW,UAAC0B,GAAD,EAAmC;AAC5C,mBAAI,CAACF,KAAL,GAAaE,GAAG,CAAClC,MAAjB;AACA,mBAAI,CAACE,UAAL,GAAkBgC,GAAG,CAAChC,UAAtB;AACD,WAJD,EAIG,UAAApF,KAAK,EAAI;AACV,mBAAI,CAACF,eAAL,CAAqBE,KAArB,CAA2BA,KAA3B;AACD,WAND;AAOD;;;;;;;uBAxCUiK,mB,EAAmB,mI,EAAA,2I,EAAA,+H;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,c;AAAA,8+C;AAAA;AAAA;ACZhC;;AACE;;AAAI;;AAA8C;;AACpD;;AAEA;;AACE;;AACE;;AAAyC;AAAA,mBAAc,IAAA3C,SAAA,EAAd;AAAyB,WAAzB;;AACvC;;AACE;;AAAoB;;AAAQ;;AAC5B;;AACE;AAAA;AAAA;;AADF;;AAEF;;AAEA;;AACE;;AAAoB;;AAAM;;AAC1B;;AACA;AAAA;AAAA;;AADA;;AAEF;;AAEA;;AACE;;AAAoB;;AAAM;;AAC1B;;AAAiF;AAAA;AAAA;;AAC/E;;AAGF;;AACF;;AACA;;AAAuE;;AAAa;;AACpF;;AAAsB;AAAA,mBAAW,IAAA+C,YAAA,EAAX;AAAyB,WAAzB;;AAAyE;;AAAY;;AAE3G;;AACE;;AACE;;AAA6D;AAAA,mBAAU,IAAA/C,SAAA,EAAV;AAAqB,WAArB,EAAsB,eAAtB,EAAsB;AAAA;AAAA,WAAtB;;AACrC;;AAAW;;AACnC;;AAA6D;AAAA,mBAAU,IAAAA,SAAA,EAAV;AAAqB,WAArB,EAAsB,eAAtB,EAAsB;AAAA;AAAA,WAAtB;;AACxC;;AAAc;;AACrC;;AACF;;AACF;;AACA;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAGF;;AACF;;AAEA;;AACE;;AACE;AAAA;AAAA,aAAqC,aAArC,EAAqC;AAAA,mBAA2D,IAAAC,WAAA,QAA3D;AAA8E,WAAnH;;AAEF;;AACF;;;;AAvDM;;AAAA;;AASI;;AAAA;;AAMF;;AAAA;;AAKiF;;AAAA;;AACvE;;AAAA;;AAU4E;;AAAA;;AAEA;;AAAA;;AAWrF;;AAAA;;AAOK;;AAAA,0FAAsB,YAAtB,EAAsB,yBAAtB,EAAsB,SAAtB,EAAsB,0BAAtB,EAAsB,cAAtB,EAAsB,2BAAtB;;;;;;;;;sEDxCD0C,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTrE,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEI;;AACE;;AAAG;;AAAe;;AACpB;;;;;;AAKI;;AACE;;AACG;;AACH;;AACA;;AACE;;AACE;;AAA6B;;AAAyB;;AACtD;;AACE;;AAA4B;;AAAuB;;AACrD;;AACF;;AACA;;AAAG;;AAAmB;;AACxB;;AACF;;;;;;AAXU;;AAAA;;AAAiC;;AAIR;;AAAA;;AAEC;;AAAA;;AAG7B;;AAAA;;;;;;AAYC;;AAAkD;;AAAQ;;;;;;AAC1D;;AAAkD;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;AAT1D;;AACE;;AACG;;AACH;;AACA;;AACE;;AACE;;AACE;;AAA4B;;AAAuB;;AACnD;;AACA;;AACF;;AACA;;AAAyC;;AAAyB;;AACpE;;AACA;;AAAG;;AAAmB;;AACxB;;AACF;;;;;;AAbU;;AAAA;;AAAiC;;AAKP;;AAAA;;AACtB;;AAAA;;AACA;;AAAA;;AAEiC;;AAAA;;AAExC;;AAAA;;;;;;AA/BT;;AAGE;;AAeA;;AAiBF;;;;;;;;AAhCO;;AAAA;;AAeA;;AAAA;;;;QDZAwE,uB;AAKX,uCAAoB5J,WAApB,EAAsDd,WAAtD,EAAwFe,QAAxF,EAAmH;AAAA;;AAA/F,aAAAD,WAAA,GAAAA,WAAA;AAAkC,aAAAd,WAAA,GAAAA,WAAA;AAAkC,aAAAe,QAAA,GAAAA,QAAA;AAFxF,aAAA4J,UAAA,GAAmB,EAAnB;AAEsH;;;;mCAE3G;AACT,eAAKC,YAAL;AACD;;;uCAEc;AAAA;;AACb,cAAMC,aAAa,GAAG,CAAC,KAAK7K,WAAL,CAAiB0B,YAAjB,CAA8BC,MAArD;AACA,eAAKb,WAAL,CAAiBgK,gBAAjB,CAAkC,KAAK9K,WAAL,CAAiB0B,YAAjB,CAA8BC,MAAhE,EAAwE,KAAKiE,WAA7E,EACGvE,IADH,CAEI,2DAAI,UAAA0J,QAAQ,EAAI;AACd,iBAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGD,QAAQ,CAACE,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,kBAAGD,QAAQ,CAACC,CAAD,CAAR,CAAYE,MAAZ,KAAuB,KAAvB,IAAgCH,QAAQ,CAACC,CAAD,CAAR,CAAYpF,WAAZ,KAA4BiF,aAA/D,EAA8E;AAC5E,uBAAI,CAAC/J,WAAL,CAAiBqK,UAAjB,CAA4BN,aAA5B,EAA2CE,QAAQ,CAACC,CAAD,CAAR,CAAYlL,EAAvD;AACD;AACF;AACF,WAND,CAFJ,EAUGgG,SAVH,CAUc,UAAAiF,QAAQ,EAAI;AACtB,mBAAI,CAACA,QAAL,GAAgBA,QAAhB;AACD,WAZH,EAYK,UAAA3K,KAAK,EAAI;AACV,mBAAI,CAACW,QAAL,CAAcX,KAAd,CAAoBA,KAApB;AACD,WAdH;AAeD;;;sCAEa;AAAA;;AACZ,eAAKuK,UAAL,CAAgB/E,WAAhB,GAA8B,KAAKA,WAAnC;AACA,eAAK9E,WAAL,CAAiBsK,WAAjB,CAA6B,KAAKpL,WAAL,CAAiB0B,YAAjB,CAA8BC,MAA3D,EAAmE,KAAKgJ,UAAxE,EACG7E,SADH,CACa,UAAC7D,OAAD,EAAsB;AAC/B,mBAAI,CAAC8I,QAAL,CAAcM,OAAd,CAAsBpJ,OAAtB;;AACA,mBAAI,CAAC0I,UAAL,CAAgBW,OAAhB,GAA0B,EAA1B;AACD,WAJH,EAIK,UAAAlL,KAAK,EAAI;AACV,mBAAI,CAACW,QAAL,CAAcX,KAAd,CAAoBA,KAApB;AACD,WANH;AAOD;;;;;;;uBAvCUsK,uB,EAAuB,0I,EAAA,0I,EAAA,kJ;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,wxB;AAAA;AAAA;;;ACZpC;;AACE;;AACE;;AAGA;;AACE;;AAoCF;;AACF;;AAEA;;AACE;;AAA4B;AAAA;;AAAA;;AAAA,gCAAiC,IAAAU,WAAA,EAAjC;AAA8C,WAA9C;;AAC1B;;AACE;;AAAmB;AAAA;AAAA;;AAAnB;;AAEA;;AACE;;AAAgE;;AAAI;;AACtE;;AACF;;AACF;;AACF;;AACF;;;;;;AAtDS;;AAAA;;AAIC;;AAAA;;AA0CiB;;AAAA;;AAGe;;AAAA;;;;;;;;;sEDvC7BV,uB,EAAuB;cALnC,uDAKmC;eALzB;AACT1E,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;gBACjC;;;;;;;;;;;;;;;;;;;;AEbH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACCE;;AACE;;AACA;;AACE;;AAA8C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAE3C;;AAAI;;AACP;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEpB;;AACF;;AACF;;AACF;;;;;;AAVO;;AAAA;;AAE2E;;AAAA,8FAA2B,SAA3B,EAA2B,mDAA3B;;AAGtB;;AAAA;;;;;;AA6ChD;;AAA4C;;;;AAAiD;;;;;;AAAjD;;AAAA;;;;;;AAFhD;;AACI;;AAAI;;AAAQ;;AAAsB;;AAAS;;AAC3C;;AACJ;;;;;;;;AAFgB;;AAAA;;AACR;;AAAA;;;;;;;;;;;;;;AAfhB;;AAEI;;AAAI;;AAAY;;AAChB;;AAAG;;AAA2C;;AAE9C;;AACI;;AACA;;AACI;;AAAgB;;AAAI;;AACpB;;AAAI;;AAAI;;AACZ;;AACA;;AACA;;AACA;;AAIA;;AACJ;;AAEA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,QAAAqF,QAAA,YAAT;AAA6B,SAA7B;;AACJ;;AAAmC;;AACvC;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,YAAT;AAA6B,SAA7B;;AACJ;;AAAgC;;AACpC;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,aAAT;AAA8B,SAA9B;;AACJ;;AAAkC;;AACtC;;AACJ;;AAEJ;;;;;;AAtCO;;AAAA;;AAUK;;AAAA;;AAWiD;;AAAA;;AAId;;AAAA;;AAIA;;AAAA;;AAIC;;AAAA;;;;;;;;;;QD5DrCC,oB;AAQX,oCAAoBxL,WAApB,EAAsDE,eAAtD,EACoBY,WADpB,EAC8C;AAAA;;AAD1B,aAAAd,WAAA,GAAAA,WAAA;AAAkC,aAAAE,eAAA,GAAAA,eAAA;AAClC,aAAAY,WAAA,GAAAA,WAAA;AAPV,aAAA2K,eAAA,GAAkB,IAAI,0DAAJ,EAAlB;AAGV,aAAApJ,OAAA,GAAW,yEAAYC,MAAvB;AAIiD;;;;mCAEtC;AACT,eAAKoJ,iBAAL;AACD;;;qCAEYlM,C,EAAM;AACjB,eAAKmM,mBAAL,GAA2BnM,CAA3B;AACD;;;4CAEmB;AAAA;;AAClB,eAAK+L,QAAL,GAAgB,IAAI,4DAAJ,CAChB;AACE9B,eAAG,EAAE,KAAKpH,OAAL,GAAe,QAAf,GAA0B,KAAKrC,WAAL,CAAiB0B,YAAjB,CAA8BC,MAAxD,GAAiE,SADxE;AAEEiK,qBAAS,EAAE,YAAY5I,YAAY,CAACQ,OAAb,CAAqB,OAArB,CAFzB;AAGEqI,mBAAO,EAAE,IAHX;AAIEC,2BAAe,EAAE,CAAC,OAAD,CAJnB;AAKEC,6BAAiB,EAAE,IALrB;AAMEC,sBAAU,EAAE,KANd;AAOEC,uBAAW,EAAE,KAAK,IAAL,GAAY;AAP3B,WADgB,CAAhB;;AAWA,eAAKV,QAAL,CAAcW,iBAAd,GAAkC,UAACC,IAAD,EAAS;AACvCA,gBAAI,CAACC,eAAL,GAAuB,KAAvB;AAA8B,WADlC;;AAGA,eAAKb,QAAL,CAAcc,aAAd,GAA8B,UAACC,IAAD,EAAOxJ,QAAP,EAAiBc,MAAjB,EAAyBI,OAAzB,EAAqC;AACjE,gBAAGlB,QAAH,EAAa;AACX,kBAAM0E,GAAG,GAAUrE,IAAI,CAACsC,KAAL,CAAW3C,QAAX,CAAnB;AACA,kBAAMwG,KAAK,GAAG;AACZxJ,kBAAE,EAAE0H,GAAG,CAAC1H,EADI;AAEZ2J,mBAAG,EAAEjC,GAAG,CAACiC,GAFG;AAGZ8C,yBAAS,EAAE/E,GAAG,CAAC+E,SAHH;AAIZ3C,2BAAW,EAAEpC,GAAG,CAACoC,WAJL;AAKZ4C,sBAAM,EAAEhF,GAAG,CAACgF;AALA,eAAd;;AAQA,qBAAI,CAACnD,MAAL,CAAYE,IAAZ,CAAiBD,KAAjB;;AACA,kBAAIA,KAAK,CAACkD,MAAV,EAAkB;AAChB,uBAAI,CAACxM,WAAL,CAAiBuD,iBAAjB,CAAmC+F,KAAK,CAACG,GAAzC;;AACA,uBAAI,CAACzJ,WAAL,CAAiBqD,WAAjB,CAA6Bb,QAA7B,GAAwC8G,KAAK,CAACG,GAA9C;AACAzG,4BAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BE,IAAI,CAACC,SAAL,CAAe,OAAI,CAACpD,WAAL,CAAiBqD,WAAhC,CAA7B;AACD;AACF;AACF,WAlBD;AAmBD;;;qCAEYiG,K,EAAY;AAAA;;AACvB,eAAKxI,WAAL,CAAiB2L,YAAjB,CAA8B,KAAKzM,WAAL,CAAiB0B,YAAjB,CAA8BC,MAA5D,EAAoE2H,KAAK,CAACxJ,EAA1E,EAA8EgG,SAA9E,CAAwF,YAAM;AAC5F,mBAAI,CAAC4G,gBAAL,GAAwB,OAAI,CAACrD,MAAL,CAAYsD,MAAZ,CAAmB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACJ,MAAF,KAAa,IAAjB;AAAA,aAApB,EAA2C,CAA3C,CAAxB;AACA,mBAAI,CAACE,gBAAL,CAAsBF,MAAtB,GAA+B,KAA/B;;AACA,mBAAI,CAACf,eAAL,CAAqBoB,IAArB,CAA0BvD,KAAK,CAACG,GAAhC;;AACA,mBAAI,CAACzJ,WAAL,CAAiBuD,iBAAjB,CAAmC+F,KAAK,CAACG,GAAzC;;AACA,mBAAI,CAACzJ,WAAL,CAAiBqD,WAAjB,CAA6Bb,QAA7B,GAAwC8G,KAAK,CAACG,GAA9C;AACAzG,wBAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BE,IAAI,CAACC,SAAL,CAAe,OAAI,CAACpD,WAAL,CAAiBqD,WAAhC,CAA7B;AACAiG,iBAAK,CAACkD,MAAN,GAAe,IAAf;AACD,WARD,EAQG,UAAApM,KAAK,EAAI;AACV,mBAAI,CAACF,eAAL,CAAqBE,KAArB,CAA2BA,KAA3B;AACD,WAVD;AAYD;;;oCAEWN,E,EAAY;AAAA;;AACtB,eAAKI,eAAL,CAAqBS,OAArB,CAA6B,8BAA7B,EAA6D,YAAM;AACjE,mBAAI,CAACG,WAAL,CAAiBgM,WAAjB,CAA6B,OAAI,CAAC9M,WAAL,CAAiB0B,YAAjB,CAA8BC,MAA3D,EAAmE7B,EAAnE,EAAwEgG,SAAxE,CAAmF,YAAM;AACvF,qBAAI,CAACuD,MAAL,CAAY0D,MAAZ,CAAmB,OAAI,CAAC1D,MAAL,CAAY2D,SAAZ,CAAsB,UAAAJ,CAAC;AAAA,uBAAIA,CAAC,CAAC9M,EAAF,KAASA,EAAb;AAAA,eAAvB,CAAnB,EAA4D,CAA5D;;AACA,qBAAI,CAACI,eAAL,CAAqB4H,OAArB,CAA6B,wBAA7B;AACD,aAHD,GAGI,UAAA1H,KAAK,EAAI;AACX,qBAAI,CAACF,eAAL,CAAqBE,KAArB,CAA2B,4BAA3B;AACD,aALD;AAMD,WAPD;AAQD;;;;;;;uBA/EUoL,oB,EAAoB,0I,EAAA,kJ,EAAA,0I;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,0uC;AAAA;AAAA;ACbjC;;AACE;;AAYF;;AAEA;;AAEE;;AAEI;;AAAI;;AAAU;;AAEd;;AAEK;AAAA,mBAAY,IAAAyB,YAAA,QAAZ;AAAgC,WAAhC;;AAGD;;AACA;;AACJ;;AAEA;;AACA;;AAAmE;;AAEnE;;AACA;;AACJ;;AAEA;;AA2CF;;;;AA/EwB;;AAAA;;AAqBb;;AAAA,8KAAiD,UAAjD,EAAiD,YAAjD;;AAS4B;;AAAA;;AAGA;;AAAA;;AAGf;;AAAA;;;;;;;;;;sEDxBXzB,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTxF,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;gBAC9B;;;gBACA;;;;;;;;;;;;;;;;;;;;AEfH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACeI;;AACE;;AAAI;;AAAW;;AACjB;;;;;;AAcQ;;AACM;;AACA;;AAAQ;;AAAyB;;AACvC;;;;;;AAFW;;AAAA;;AACG;;AAAA;;;;;;AAEd;;AACM;;AACA;;AAAQ;;AAA4B;;AAC1C;;;;;;AAFW;;AAAA;;AACG;;AAAA;;;;;;;;;;;;;;;;;;AAVlB;;AAEE;;AAAI;;AAAmB;;AACvB;;AACE;;AAIA;;AAIF;;AACA;;AAAI;;AAAyB;;AAC7B;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAAmC,OAAnC,EAAmC;AAAA;;AAAA,iBAAU8D,MAAM,CAACkD,eAAP,EAAV;AAAkC,SAArE;;AAA8F;;AAAM;;AAC9G;;AACF;;;;;;;;AAjBqC,0OACoC,aADpC,EACoC,qEADpC;;AAE/B;;AAAA;;AAEG;;AAAA;;AAIA;;AAAA;;AAKH;;AAAA;;;;;;AArBV;;AACE;;AACE;;AACE;;AAAuB;;AAAO;;AAC9B;;AAAuB;;AAAS;;AAChC;;AAAuB;;AAAe;;AACtC;;AACF;;AACA;;AAkBF;;AAEF;;;;;;AApBQ;;AAAA;;;;QDdCC,iB;AAKX,iCAAoBrM,WAApB,EAAsDd,WAAtD,EACoBmB,KADpB,EACmDJ,QADnD,EAC8E;AAAA;;AAD1D,aAAAD,WAAA,GAAAA,WAAA;AAAkC,aAAAd,WAAA,GAAAA,WAAA;AAClC,aAAAmB,KAAA,GAAAA,KAAA;AAA+B,aAAAJ,QAAA,GAAAA,QAAA;AAHnD,aAAAe,gBAAA,GAAkB,QAAlB;AAIe;;;;mCAEJ;AAAA;;AACT,eAAKX,KAAL,CAAWkG,IAAX,CAAgBvB,SAAhB,CAA0B,UAAAuB,IAAI,EAAI;AAChC,mBAAI,CAAC0D,QAAL,GAAgB1D,IAAI,CAAC,UAAD,CAAJ,CAAiB/B,MAAjC;AACA,mBAAI,CAACE,UAAL,GAAkB6B,IAAI,CAAC,UAAD,CAAJ,CAAiB7B,UAAnC;AACD,WAHD;AAID;;;uCAEc;AAAA;;AACb,eAAK1E,WAAL,CAAiBiB,WAAjB,CAA6B,KAAK/B,WAAL,CAAiB0B,YAAjB,CAA8BC,MAA3D,EAAmE,KAAK6D,UAAL,CAAgB+B,WAAnF,EACE,KAAK/B,UAAL,CAAgBZ,YADlB,EACgC,KAAK9C,gBADrC,EAEGgE,SAFH,CAEa,UAAC0B,GAAD,EAAsC;AAC/C,mBAAI,CAACuD,QAAL,GAAgBvD,GAAG,CAAClC,MAApB;AACA,mBAAI,CAACE,UAAL,GAAkBgC,GAAG,CAAChC,UAAtB;AACD,WALH,EAKK,UAAApF,KAAK,EAAI;AACV,mBAAI,CAACW,QAAL,CAAcX,KAAd,CAAoBA,KAApB;AACD,WAPH;AASD;;;sCAEaN,E,EAAY;AAAA;;AACxB,eAAKiB,QAAL,CAAcJ,OAAd,CAAsB,sCAAtB,EAA8D,YAAM;AAClE,mBAAI,CAACG,WAAL,CAAiBsM,aAAjB,CAA+BtN,EAA/B,EAAmC,OAAI,CAACE,WAAL,CAAiB0B,YAAjB,CAA8BC,MAAjE,EAAyEmE,SAAzE,CAAmF,YAAM;AACvF,qBAAI,CAACiF,QAAL,CAAcgC,MAAd,CAAqB,OAAI,CAAChC,QAAL,CAAciC,SAAd,CAAwB,UAAAK,CAAC;AAAA,uBAAIA,CAAC,CAACvN,EAAF,KAASA,EAAb;AAAA,eAAzB,CAArB,EAAgE,CAAhE;;AACA,qBAAI,CAACiB,QAAL,CAAc+G,OAAd,CAAsB,0BAAtB;AACD,aAHD,EAGG,UAAA1H,KAAK,EAAI;AACV,qBAAI,CAACW,QAAL,CAAcX,KAAd,CAAoBA,KAApB;AACD,aALD;AAMD,WAPD;AAQD;;;oCAEWqH,K,EAAU;AACpB,eAAKjC,UAAL,CAAgB+B,WAAhB,GAA8BE,KAAK,CAAC9C,IAApC;AACA,eAAKiG,YAAL;AACD;;;;;;;uBA1CUuC,iB,EAAiB,mI,EAAA,mI,EAAA,+H,EAAA,2I;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,u/B;AAAA;AAAA;ACb9B;;AACI;;AACE;;AACE;;AAAgC;AAAA;AAAA,aAA8B,OAA9B,EAA8B;AAAA,mBAA4B,IAAAvC,YAAA,EAA5B;AAA0C,WAAxE;;AAC9B;;AAA+B;;AACjC;;AACA;;AAAgC;AAAA;AAAA,aAA8B,OAA9B,EAA8B;AAAA,mBAA2B,IAAAA,YAAA,EAA3B;AAAyC,WAAvE;;AAC9B;;AAAoC;;AACtC;;AACA;;AAAgC;AAAA;AAAA,aAA8B,OAA9B,EAA8B;AAAA,mBAA4B,IAAAA,YAAA,EAA5B;AAA0C,WAAxE;;AAC9B;;AAAkC;;AACpC;;AACF;;AACF;;AAEA;;AAIA;;AA8BF;;AAEA;;AACI;;AAGY;AAAA;AAAA,aAAoC,aAApC,EAAoC;AAAA,mBACrB,IAAAjD,WAAA,QADqB;AACF,WADlC;;AAGd;;AACF;;;;AAxDsC;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAMnB;;AAAA;;AAIA;;AAAA;;AAiCH;;AAAA,0FAAsB,YAAtB,EAAsB,yBAAtB,EAAsB,cAAtB,EAAsB,2BAAtB,EAAsB,SAAtB,EAAsB,0BAAtB;;;;;;;;;sEDvCLwF,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTnH,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEb9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;ACII;;AACE;;AACE;;AAAgD;;AAAO;;AACzD;;AACA;;AACE;;AAA8C;;AAAI;;AACpD;;AACA;;AACE;;AAAiD;;AAAQ;;AAC3D;;AACF;;;;AARwB;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;;;;;;;AAYtB;;AACE;;AAAyD;;AAA0B;;AAAY;;AAC/F;;AACA;;AAAyB;AAAA;;AAAA;;AAAA;AAAA;;AAAsB;;AAA8B;;AAAO;;AACtF;;;;AAH2B;;AAAA;;;;;;AAT7B;;AACE;;AACE;;AACF;;AACA;;AACE;;;;AACF;;AAEA;;AAKF;;;;;;AAXS;;AAAA;;AAGL;;AAAA;;;;;;;;AAUJ;;AAA+E;AAAA;;AAAA;;AAAA;AAAA;;AAC7E;;AAAgD;AAAA;;AAAA;;AAAA;AAAA;;AAAhD;;AACA;;AAAoD;AAAA;;AAAA;;AAAA;AAAA;;AAApD;;AACA;;AAA2D;;AAAK;;AAClE;;;;;;AAHkD;;AAAA;;AACI;;AAAA;;;;;;;;QDvB7CoH,Y;AAIX,4BAAmBtN,WAAnB,EAAqDE,eAArD,EAA+FD,MAA/F,EAA+G;AAAA;;AAA5F,aAAAD,WAAA,GAAAA,WAAA;AAAkC,aAAAE,eAAA,GAAAA,eAAA;AAA0C,aAAAD,MAAA,GAAAA,MAAA;AAH/F,aAAA2C,KAAA,GAAa,EAAb;AAGkH;;;;mCAEvG;AAAA;;AACT,eAAK5C,WAAL,CAAiByC,eAAjB,CAAiCqD,SAAjC,CAA2C,UAAAtD,QAAQ;AAAA,mBAAI,OAAI,CAACA,QAAL,GAAgBA,QAApB;AAAA,WAAnD;AACD;;;gCAGI;AAAA;;AACH,eAAKxC,WAAL,CAAiBuN,KAAjB,CAAuB,KAAK3K,KAA5B,EAAmCkD,SAAnC,CACE,UAAAnD,IAAI,EAAI;AACN,mBAAI,CAACzC,eAAL,CAAqB4H,OAArB,CAA6B,kBAA7B;AACD,WAHH,EAIE,UAAA1H,KAAK,EAAI;AACP,mBAAI,CAACF,eAAL,CAAqB4H,OAArB,CAA6B1H,KAA7B;AACD,WANH,EAMK,YAAM;AACP,mBAAI,CAACH,MAAL,CAAYI,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD,WARH;AAUD;;;mCAEO;AACN,iBAAO,KAAKL,WAAL,CAAiBG,QAAjB,EAAP;AACD;;;oCAEQ;AACP6C,sBAAY,CAACwK,UAAb,CAAwB,OAAxB;AACAxK,sBAAY,CAACwK,UAAb,CAAwB,MAAxB;AACA,eAAKxN,WAAL,CAAiB0B,YAAjB,GAAgC,IAAhC;AACA,eAAK1B,WAAL,CAAiBqD,WAAjB,GAA+B,IAA/B;AACA,eAAKnD,eAAL,CAAqB+B,OAArB,CAA6B,YAA7B;AACA,eAAKhC,MAAL,CAAYI,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;;;;;;;uBAnCUiN,Y,EAAY,mI,EAAA,2I,EAAA,uH;AAAA,K;;;YAAZA,Y;AAAY,8B;AAAA,c;AAAA,a;AAAA,iuC;AAAA;AAAA;ACVzB;;AACE;;AACE;;AAAiD;;AAAS;;AAE1D;;AAYA;;AAeA;;AAKF;;AAEF;;;;AApC4B;;AAAA;;AAEpB;;AAAA;;AAYC;;AAAA;;AAeC;;AAAA;;;;;;;;;;sEDrBGA,Y,EAAY;cALxB,uDAKwB;eALd;AACTtH,kBAAQ,EAAE,SADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEVzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC2BI;;AAA8H;;AAAoB;;;;;;AAQlJ;;AAGE;;AACF;;;;;;AACA;;AAGE;;AACF;;;;;;AACA;;AAGE;;AACF;;;;;;AAQA;;AAGE;;AACF;;;;;;AACA;;AAEE;;AACF;;;;;;AAMA;;AAAwH;;AAAgB;;;;;;AAMxI;;AAA8H;;AAAmB;;;;;;AAMjJ;;AAAsI;;AAAyB;;;;;;;;;;QDtEtJuH,iB;AAMX,iCAAoBzN,WAApB,EAAsDE,eAAtD,EACoBD,MADpB,EAC4CyN,EAD5C,EAC6D;AAAA;;AADzC,aAAA1N,WAAA,GAAAA,WAAA;AAAkC,aAAAE,eAAA,GAAAA,eAAA;AAClC,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAyN,EAAA,GAAAA,EAAA;AANlC,aAAAC,cAAA,GAAiB,IAAI,0DAAJ,EAAjB;AAMsD;;;;mCAErD;AACT,eAAKC,QAAL,GAAgB;AACdC,0BAAc,EAAE;AADF,WAAhB;AAGA,eAAKC,kBAAL;AACD;;;6CAEoB;AACnB,eAAKC,YAAL,GAAoB,KAAKL,EAAL,CAAQM,KAAR,CAAc;AAChC7I,kBAAM,EAAE,CAAC,MAAD,CADwB;AAEhC8I,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CAFsB;AAGhCnG,mBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWmG,QAAhB,CAHuB;AAIhCC,uBAAW,EAAE,CAAC,IAAD,EAAO,0DAAWD,QAAlB,CAJmB;AAKhCE,gBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CAL0B;AAMhCG,mBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWH,QAAhB,CANuB;AAOhCI,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWJ,QAAZ,EAAsB,0DAAWK,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,CAArB,CAA/C,CAAL,CAPsB;AAQhCC,2BAAe,EAAE,CAAC,EAAD,EAAK,0DAAWP,QAAhB;AARe,WAAd,EASjB;AAACQ,qBAAS,EAAE,KAAKC;AAAjB,WATiB,CAApB;AAUD;;;+CAEsBC,C,EAAY;AAEjC,iBAAOA,CAAC,CAAC3K,GAAF,CAAM,UAAN,EAAkBsG,KAAlB,KAA4BqE,CAAC,CAAC3K,GAAF,CAAM,iBAAN,EAAyBsG,KAArD,GAA6D,IAA7D,GAAoE;AAAC,wBAAY;AAAb,WAA3E;AACD;;;mCAEO;AAAA;;AACN,cAAG,KAAKwD,YAAL,CAAkBc,KAArB,EAA2B;AACzB,iBAAK9L,IAAL,GAAY+L,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKhB,YAAL,CAAkBxD,KAApC,CAAZ;AACA,iBAAKvK,WAAL,CAAiBgP,QAAjB,CAA0B,KAAKjM,IAA/B,EAAqC+C,SAArC,CAA+C,YAAM;AACnD,qBAAI,CAAC5F,eAAL,CAAqB4H,OAArB,CAA6B,wBAA7B;AACD,aAFD,EAGA,UAAA1H,KAAK,EAAI;AACP,qBAAI,CAACF,eAAL,CAAqBE,KAArB,CAA2BA,KAA3B;AACD,aALD,EAKG,YAAM;AACP,qBAAI,CAACJ,WAAL,CAAiBuN,KAAjB,CAAuB,OAAI,CAACxK,IAA5B,EAAkC+C,SAAlC,CAA4C,YAAM;AAChD,uBAAI,CAAC7F,MAAL,CAAYI,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD,eAFD;AAGD,aATD;AAUD;AACF;;;iCAEK;AACJ,eAAKsN,cAAL,CAAoBd,IAApB,CAAyB,KAAzB;AACD;;;;;;;uBApDUY,iB,EAAiB,mI,EAAA,2I,EAAA,uH,EAAA,2H;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,06C;AAAA;AAAA;ACb9B;;AAAiC;AAAA,mBAAY,IAAAuB,QAAA,EAAZ;AAAsB,WAAtB;;AAC/B;;AAAqC;;AAAO;;AAC5C;;AAEA;;AACE;;AAAuD;;AAAQ;;AAC/D;;AACE;;AAAuE;;AACzE;;AACA;;AACE;;AAAyE;;AAC3E;;AACF;;AAEA;;AACE;;AAIA;;AACE;;AACF;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAIA;;AAKA;;AAKA;;AAKF;;AAEA;;AACE;;AAIA;;AAKA;;AAIF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAAiF;;AAAQ;;AACzF;;AAAgC;AAAA,mBAAS,IAAAC,MAAA,EAAT;AAAiB,WAAjB;;AAAiC;;AAAM;;AACzE;;AAEF;;;;AA3FM;;AAiBF;;AAAA;;AAQO;;AAAA;;AAEuB;;AAAA;;AAM7B;;AAAA;;AAGD;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAQA;;AAAA;;AAIA;;AAAA;;AAKA;;AAAA;;AAMO;;AAAA;;AAEuB;;AAAA;;AAIvB;;AAAA;;AAEuB;;AAAA;;AAIvB;;AAAA,iPAA6G,UAA7G,EAA6G,YAA7G;;AAEuB;;AAAA;;AAIE;;AAAA;;;;;;;;;sED1EvBxB,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTzH,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;gBAC3B;;;;;;;;;;;;;;;;;;;;AEbH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAcO,QAAMgJ,SAAS,GAAW,CAC7B;AAAEC,UAAI,EAAE,EAAR;AAAY3O,eAAS,EAAE;AAAvB,KAD6B,EAE7B;AACI2O,UAAI,EAAE,EADV;AAEIC,2BAAqB,EAAE,QAF3B;AAGIC,iBAAW,EAAE,CAAC,4DAAD,CAHjB;AAIIC,cAAQ,EAAE,CACN;AAAEH,YAAI,EAAE,SAAR;AAAoB3O,iBAAS,EAAE,8FAA/B;AAAoDlB,eAAO,EAAE;AAACgI,eAAK,EAAE;AAAR;AAA7D,OADM,EAEN;AAAE6H,YAAI,EAAE,aAAR;AAAwB3O,iBAAS,EAAE,uGAAnC;AAA2DlB,eAAO,EAAE;AAACyD,cAAI,EAAE;AAAP;AAApE,OAFM,EAGN;AAAEoM,YAAI,EAAE,aAAR;AAAwB3O,iBAAS,EAAE,8FAAnC;AAAwDlB,eAAO,EAAE;AAACyD,cAAI,EAAE;AAAP,SAAjE;AACIwM,qBAAa,EAAE,CAAC,6EAAD;AADnB,OAHM,EAKN;AAAEJ,YAAI,EAAE,UAAR;AAAoB3O,iBAAS,EAAE,8EAA/B;AAAkDlB,eAAO,EAAE;AAACyL,kBAAQ,EAAE;AAAX;AAA3D,OALM,EAMN;AAAEoE,YAAI,EAAE,OAAR;AAAiB3O,iBAAS,EAAE,qEAA5B;AAA4ClB,eAAO,EAAE;AAACgI,eAAK,EAAE;AAAR;AAArD,OANM;AAJd,KAF6B,EAe7B;AAAE6H,UAAI,EAAE,IAAR;AAAcK,gBAAU,EAAE,EAA1B;AAA8BC,eAAS,EAAE;AAAzC,KAf6B,CAA1B;;;;;;;;;;;;;;;;ACfP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACE;;AACF;;;;;;AADE;;AAAA;;;;QDQWC,c;AAGX,8BAAoBtN,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;mCAE9B;AACT,eAAKuN,SAAL;AACD;;;oCAEW;AAAA;;AACR,eAAKvN,IAAL,CAAU6B,GAAV,CAAc,+BAAd,EAA+C6B,SAA/C,CAAyD,UAAAhD,QAAQ,EAAI;AACnE,mBAAI,CAAC8M,MAAL,GAAc9M,QAAd;AACD,WAFD,EAEG,UAAA1C,KAAK,EAAI;AACVyP,mBAAO,CAACC,GAAR,CAAY1P,KAAZ;AACD,WAJD;AAMH;;;;;;;uBAhBUsP,c,EAAc,gI;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA,uC;AAAA;AAAA;ACT3B;;;;AAAG;;;;;;;;;sEDSUA,c,EAAc;cAL1B,uDAK0B;eALhB;AACT1J,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;AET3B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM6J,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzB1N,YAAM,EAAE;AAFiB,KAApB;AAKP;;;;;;;AAOA;;;;;;;;;;;;;;;;;AChBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAY0N,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIL,OAAO,CAACzP,KAAR,CAAc8P,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { AuthService } from '../_services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router, private alertifyService: AlertifyService) {}\n\n  canActivate(): boolean  {\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n\n    this.alertifyService.error('Restricted');\n    this.router.navigate(['./home']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\n\r\n@Injectable()\r\nexport class PreventUnsaved implements CanDeactivate<MemberEditComponent> {\r\n    canDeactivate(component: MemberEditComponent) {\r\n        if(component.editForm.dirty){\r\n            return confirm('Do you cotinue? Any unsaved changes will be lost');\r\n        }\r\n        return true;\r\n    }\r\n}","export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n    totalPages: number;\n}\n\nexport class PaginationResult<T> {\n    result: T;\n    pagination: Pagination;\n}","import {Injectable} from '@angular/core';\r\nimport {User} from '../_models/user';\r\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ListResolver implements Resolve<User[]>{\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    likesParams = 'Likers';\r\n\r\n    constructor(private userService: UserService,\r\n                private router: Router, private alertify: AlertifyService)\r\n    {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n        return this.userService.getUsers(this.pageNumber, this.pageSize, null, this.likesParams).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import {Injectable} from '@angular/core';\r\nimport {User} from '../_models/user';\r\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberDetailResolver implements Resolve<User>{\r\n    constructor(private userService: UserService,\r\n                private router: Router, private alertify: AlertifyService)\r\n    {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(route.params['id']).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/members']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import {Injectable} from '@angular/core';\r\nimport {User} from '../_models/user';\r\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User>{\r\n    constructor(private userService: UserService, private authService: AuthService,\r\n                private router: Router, private alertify: AlertifyService)\r\n    {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import {Injectable} from '@angular/core';\r\nimport {User} from '../_models/user';\r\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberUsersResolver implements Resolve<User[]>{\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n\r\n    constructor(private userService: UserService,\r\n                private router: Router, private alertify: AlertifyService)\r\n    {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n        return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import {Injectable} from '@angular/core';\r\nimport {User} from '../_models/user';\r\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Message } from '../_models/Message';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MessagesResolver implements Resolve<Message[]>{\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    messageContainer = 'Unread';\r\n\r\n    constructor(private userService: UserService, private authService: AuthService,\r\n                private router: Router, private alertify: AlertifyService)\r\n    {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Message[]> {\r\n        return this.userService.getMessages(this.authService.decodedToken.nameid,\r\n            this.pageNumber, this.pageSize, this.messageContainer).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport * as alertify from 'alertifyjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\nconstructor() { }\n\n  confirm(message: string, okCallBack: () => any ){\n    alertify.confirm(message, (e: any) => {\n      if (e) {\n        okCallBack();\n      }\n      else {}\n\n    });\n  }\n\n  success(message: string){\n    alertify.success(message);\n  }\n\n  error(message: string){\n    alertify.error(message);\n  }\n\n  warning(message: string){\n    alertify.warning(message);\n  }\n\n  message(message: string){\n    alertify.message(message);\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\nimport { User } from '../_models/user';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  baseUrl = environment.apiUrl + 'auth/';\r\n  jwtHelper = new JwtHelperService();\r\n  decodedToken: any;\r\n  currentUser: User;\r\n  photoUrl = new BehaviorSubject<string>('../../asstes/user.png');\r\n  currentPhotoUrl = this.photoUrl.asObservable();\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  changeMemberPhoto(photoUrl: string) {\r\n    this.photoUrl.next(photoUrl);\r\n  }\r\n\r\n  login(model: any)\r\n  {\r\n    return this.http.post(this.baseUrl + 'login', model)\r\n      .pipe(\r\n        map((response: any) => {\r\n          const user = response;\r\n          if (user){\r\n            localStorage.setItem('token', user.token);\r\n            localStorage.setItem('user', JSON.stringify(user.user));\r\n            this.currentUser = user.user;\r\n            this.decodedToken = this.jwtHelper.decodeToken(user.token);\r\n            this.changeMemberPhoto(this.currentUser.photoUrl);\r\n          }\r\n        })\r\n    );\r\n  }\r\n\r\n  register(user: User){\r\n    return this.http.post(this.baseUrl + 'register', user);\r\n  }\r\n\r\n  loggedIn(){\r\n    const token = localStorage.getItem('token');\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    req: import('@angular/common/http').HttpRequest<any>,\r\n    next: import('@angular/common/http').HttpHandler\r\n  ): import('rxjs').Observable<import('@angular/common/http').HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n        catchError(error => {\r\n            if (error.status === 401){\r\n                return throwError(error.statusText);\r\n            }\r\n\r\n            if (error.name === 'HttpErrorResponse') {\r\n                const applicationError = error.headers.get('Application-Error');\r\n                if (applicationError){\r\n                    return throwError(applicationError);\r\n                }\r\n                const serverError = error.error;\r\n                let modalStateErrors = '';\r\n                if (serverError.errors && typeof(serverError.errors) === 'object') {\r\n                    for (const key in serverError.errors) {\r\n                        if (serverError.errors[key]) {\r\n                            modalStateErrors += serverError.errors[key] + '\\n';\r\n                        }\r\n                    }\r\n                }\r\n                return throwError(modalStateErrors || serverError || 'Server Error');\r\n            }\r\n        })\r\n    );\r\n  }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ErrorInterceptor,\r\n    multi: true\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { AuthService } from './auth.service';\nimport { PaginationResult } from '../_models/Pagination';\nimport { map } from 'rxjs/operators';\nimport { Message } from '../_models/Message';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UserService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private authService: AuthService) { }\n\n  getUsers(page?, itemsPerPage?, userParams?, likesParam?): Observable<PaginationResult<User[]>> {\n    let paginatedResult: PaginationResult<User[]> = new PaginationResult<User[]>();\n    let params = new HttpParams();\n    \n    if(page != null && itemsPerPage !=null){\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    } \n\n    if(userParams != null) {\n      params = params.append('minAge', userParams.minAge);\n      params = params.append('maxAge', userParams.maxAge);\n      params = params.append('gender', userParams.gender);\n      params = params.append('orderBy', userParams.orderBy);\n    }\n\n    if (likesParam === 'Likers') {\n      params = params.append('likers', 'true');\n    }\n    if (likesParam === 'Likees') {\n      params = params.append('likees', 'true');\n    }\n\n    return this.http.get<User[]>(this.baseUrl + 'users', {observe: 'response', params })\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if(response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getUser(id: number): Observable<User> {\n    return this.http.get<User>(this.baseUrl + 'users/' + id);\n  }\n\n  updateUser(id: number, user: User): Observable<User> {\n    return this.http.put<User>(this.baseUrl + 'users/' + id, user);\n  }\n\n  setMainPhoto(userId: number, id: number) {\n    return this.http.post(this.baseUrl + 'users/' + userId +  '/photos/' + id + '/setMain', {});\n  }\n\n  deletePhoto(userId: number, id: number) {\n    return this.http.delete(this.baseUrl + 'users/' + userId +  '/photos/' + id);\n  }\n\n  sendLike(id: number, recipientId: number) {\n    return this.http.post(this.baseUrl + 'users/' + id + '/like/' + recipientId, {});\n  }\n\n  getMessages(id: number, page?, itemsPerPage?, messageContainer?) {\n    const paginatedResult: PaginationResult<Message[]> = new PaginationResult<Message[]>();\n\n    let params = new HttpParams();\n    params = params.append('messageContainer', messageContainer);\n\n    if(page != null && itemsPerPage !=null){\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    } \n    \n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages', {observe: 'response', params})\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') !== null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n\n          return paginatedResult;\n        })\n      );\n  }\n\n  getMessageThread(id: number, recipientId: number) {\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages/thread/' + recipientId);\n  }\n\n  sendMessage(id: number, message: Message) {\n    return this.http.post(this.baseUrl + 'users/' + id + '/messages', message);\n  }\n\n  deleteMessage(id: number, userId: number){\n    return this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + id, {});\n  }\n\n  markAsRead(userId: number, messageId: number) {\n    this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + messageId + '/read', {})\n      .subscribe();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { User } from './_models/user';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  jwtHelper = new JwtHelperService();\r\n\r\n  constructor(private authService: AuthService){}\r\n\r\n  ngOnInit(){\r\n    const token = localStorage.getItem('token');\r\n    const user: User = JSON.parse(localStorage\r\n      .getItem('user'));\r\n    if (token) {\r\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\r\n    }\r\n    if (user) {\r\n      this.authService.currentUser = user;\r\n      this.authService.changeMemberPhoto(user.photoUrl);\r\n    }\r\n  }\r\n\r\n}\r\n","<app-nav></app-nav>\r\n<router-outlet></router-outlet>\r\n<app-value></app-value>\r\n\r\n\r\n\r\n","import { BrowserModule, HammerGestureConfig, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\r\nimport { NgModule, Pipe } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ValueComponent } from './value/value.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { MemberDetailsComponent } from './members/member-details/member-details.component';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { appRoutes } from './routes';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberUsersResolver } from './_resolvers/member-users.resolver';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resover';\r\nimport { PreventUnsaved } from './_guards/prevent-unsaved.guard';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\r\nimport { ListResolver } from './_resolvers/list.resolver';\r\nimport { MessagesResolver } from './_resolvers/messages.resolver';\r\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\r\n\r\n\r\n\r\nexport function tokenGetter(){\r\n   return localStorage.getItem('token');\r\n}\r\n\r\nexport class CustomHammerConfig extends HammerGestureConfig {\r\n   overrides = {\r\n      pinch: {enable: false},\r\n      rotate: {enable: false}\r\n   };\r\n}\r\n\r\n\r\n@NgModule({\r\n   declarations: [\r\n      AppComponent,\r\n      ValueComponent,\r\n      NavComponent,\r\n      HomeComponent,\r\n      RegisterComponent,\r\n      ListsComponent,\r\n      MemberListComponent,\r\n      MessagesComponent,\r\n      MemberCardComponent,\r\n      MemberDetailsComponent,\r\n      MemberEditComponent,\r\n      PhotoEditorComponent,\r\n      MemberMessagesComponent\r\n   ],\r\n   imports: [\r\n      BrowserModule,\r\n      ReactiveFormsModule,\r\n      HttpClientModule,\r\n      FormsModule,\r\n      BrowserAnimationsModule,\r\n      BsDropdownModule.forRoot(),\r\n      BsDatepickerModule.forRoot(),\r\n      PaginationModule.forRoot(),\r\n      TabsModule.forRoot(),\r\n      ButtonsModule.forRoot(),\r\n      RouterModule.forRoot(appRoutes),\r\n      NgxGalleryModule,\r\n      FileUploadModule,\r\n      JwtModule.forRoot( {\r\n         config: {\r\n            tokenGetter: tokenGetter,\r\n            whitelistedDomains: ['localhost:5000'],\r\n            blacklistedRoutes: ['localhost:5000/auth']\r\n         }\r\n      })\r\n   ],\r\n   providers: [\r\n      AuthService,\r\n      ErrorInterceptorProvider,\r\n      MemberDetailResolver,\r\n      MemberUsersResolver,\r\n      MemberEditResolver,\r\n      MessagesResolver,\r\n      ListResolver,\r\n      PreventUnsaved,\r\n      { provide: HAMMER_GESTURE_CONFIG, useClass: CustomHammerConfig}\r\n   ],\r\n   bootstrap: [\r\n      AppComponent,\r\n      ValueComponent\r\n   ]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  registerMode = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  toogleRegisterMode(){\n    this.registerMode = !this.registerMode;\n  }\n\n  cancelRegisterMode(registerMode: boolean){\n    this.registerMode = registerMode;\n  }\n\n}\n","<div class=\"container mt-5\">\n  <div *ngIf=\"!registerMode\" style=\"text-align: center\">\n    <h1>Find your match</h1>\n    <p class=\"lead\">Come on in to view your matches... All you need to do is sign up!</p>\n    <div class=\"text-center\">\n      <button class=\"btn btn-primary btn-lg\" (click)=\"toogleRegisterMode()\">Register</button>\n      <button class=\"btn btn-info btn-lg\">Learn more</button>\n    </div>\n  </div>\n\n  <div *ngIf=\"registerMode\" class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-4\">\n        <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { AuthService } from '../_services/auth.service';\nimport { UserService } from '../_services/user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from '../_models/user';\nimport { Pagination, PaginationResult } from '../_models/Pagination';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  likesParam: string;\n\n  constructor(private authService: AuthService, private userService: UserService,\n    private route: ActivatedRoute, private alertifyService: AlertifyService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n    this.likesParam = 'Likers';\n  }\n\n  loadUsers(){ \n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\n    .subscribe((res: PaginationResult<User[]>) => {\n      this.users = res.result;\n      this.pagination = res.pagination;\n    }, error => {\n      this.alertifyService.error(error);\n    });\n  }\n  \n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n\n}\n","<div class=\"text-center mt-3\">\n  <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\'ve Liked'}} : {{pagination.totalItems}}</h2>\n</div>\n\n<div class=\"container mt-3\">\n\n<div class=\"row\">\n  <div class=\"btn-group\">\n    <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"Likers\" (click)=\"loadUsers()\">Members who like me</button>\n    <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"Likees\" (click)=\"loadUsers()\">Members who I like</button>\n  </div>\n</div>\n\n<br>\n\n<div class=\"row\">\n  <div *ngFor=\"let user of users\" class=\"col-sm-6 col-md-4 col-lg-4 col-xl-2\">\n    <app-member-card [user]=\"user\"></app-member-card>\n  </div>\n</div>\n\n\n\n</div>\n\n<div class=\"d-flex justify-content-center\">\n<pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\" [(ngModel)]=\"pagination.currentPage\"\n  (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\"\n  >\n\n</pagination>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() user: User;\n\n  constructor(private authService: AuthService, private userService: UserService, \n              private alertifyService: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  sendLike(id: number) {\n    this.userService.sendLike(this.authService.decodedToken.nameid, id).subscribe(data => {\n      this.alertifyService.success('You have like: ' + this.user.knownAs);\n    }, error => {\n      this.alertifyService.error(error);\n    });\n  }\n\n}\n","<div class=\"card mb-4\">\r\n  <div class=\"card-img-wrapper\">\r\n    <img src=\"{{user.photoUrl || '../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\" class=\"card-img-top\">\r\n    <ul class=\"list-inline member-icons animate text-center\">\r\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" [routerLink]=\"['/members/', user.id ]\" routerLinkActive=\"router-link-active\" ><i class=\"fa fa-user\"></i></button></li>\r\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" (click) = \"sendLike(user.id)\"><i class=\"fa fa-heart\"></i></button></li>\r\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" [routerLink]=\"['/members/', user.id]\" [queryParams]=\"{tab: 3}\"><i class=\"fa fa-envelope\"></i></button></li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"card-body p-1\">\r\n    <h6 class=\"card-title text-center mb-1\">\r\n      <i class=\"fa fa-user\"></i>\r\n      {{user.knownAs}}, {{user.age}}\r\n    </h6>\r\n    <p class=\"card-text text-muted text-center\">\r\n      {{user.city}}\r\n    </p>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from '@kolkov/ngx-gallery';\nimport { TabsetComponent } from 'ngx-bootstrap/tabs/public_api';\n\n@Component({\n  selector: 'app-member-details',\n  templateUrl: './member-details.component.html',\n  styleUrls: ['./member-details.component.css']\n})\nexport class MemberDetailsComponent implements OnInit {\n  @ViewChild('memberTabs', {static: true}) memberTabs: TabsetComponent;\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n\n  constructor(private userService: UserService, private alertifyService: AlertifyService,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'] });\n\n    this.route.queryParams.subscribe(params => {\n      const selectedTab = params['tab'];\n      this.memberTabs.tabs[selectedTab > 0 ? selectedTab : 0].active = true;\n    })\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false\n      },\n            {\n              breakpoint: 800,\n              width: '100%',\n              height: '600px',\n              imagePercent: 80,\n              thumbnailsPercent: 20,\n              thumbnailsMargin: 20,\n              thumbnailMargin: 20\n            },\n            {\n              breakpoint: 400,\n              preview: false\n            }\n    ];\n\n    this.galleryImages = this.getImages();\n\n  }\n\n\n  getImages(){\n    const imagesUrls = [];\n    for (const photo of this.user.photos) {\n      imagesUrls.push({\n        small: photo.url,\n        medium: photo.url,\n        big: photo.url,\n        description: photo.description\n      });\n    }\n\n    return imagesUrls;\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n\n\n\n  // loadUser() {\n  //   this.userService.getUser(+this.route.snapshot.params['id']).subscribe(\n  //     (user: User) => {\n  //       this.user = user;\n  //     }, error => {\n  //       this.alertifyService.error(error);\n  //     }\n  //   );\n  // }\n\n}\n","<div class=\"container mt-4\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-4\">\r\n      <div class=\"card\">\r\n        <img src=\"{{user.photoUrl || '../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\" class=\"card-img-top img-thumbnail\">\r\n        <div class=\"card-body\">\r\n          <div>\r\n            <strong>Location:</strong>\r\n            <p>{{user.city}}, {{user.country}}</p>\r\n          </div>\r\n          <div>\r\n            <strong>Age:</strong>\r\n            <p>{{user.age}}</p>\r\n          </div>\r\n          <div>\r\n            <strong>Last Active:</strong>\r\n            <p>{{user.lastActive | date: 'mediumDate'}}</p>\r\n          </div>\r\n          <div>\r\n            <strong>Member since:</strong>\r\n            <p>{{user.created | date: 'mediumDate'}}</p>\r\n          </div>\r\n          <div class=\"card-footer\">\r\n            <div class=\"btn-group d-flex\">\r\n              <button class=\"btn btn-primary w-100\">Like</button>\r\n              <button class=\"btn btn-success w-100\" (click)=\"selectTab(3)\">Message</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-8\">\r\n      <div class=\"tab-panel\">\r\n        <tabset class=\"member-tabset\" #memberTabs>\r\n          <tab heading=\"About {{user.knownAs}}\">\r\n            <h4>Description</h4>\r\n            <p>{{user.introduction}}</p>\r\n            <h4>Look For</h4>\r\n            <p>{{user.lookingFor}}</p>\r\n          </tab>\r\n          <tab heading=\"Interests\">\r\n            <h4>Interests</h4>\r\n            <p>{{user.interests}}</p>\r\n          </tab>\r\n          <tab heading=\"Photos\">\r\n            <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\"></ngx-gallery>\r\n          </tab>\r\n          <tab heading=\"Messages\">\r\n            <app-member-messages [recipientId] = \"user.id\"></app-member-messages>\r\n          </tab>\r\n          \r\n        </tabset>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm: NgForm;\n  user: User;\n  photoUrl: string;\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNOtification($event: any){\n     if(this.editForm.dirty) {\n       $event.returnValue = true;\n     }\n  }\n\n  constructor(private userService: UserService, private alertifyService: AlertifyService,\n              private route: ActivatedRoute, private authService: AuthService\n              ) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'] });\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  updateUser(){\n    this.userService.updateUser(this.authService.decodedToken.nameid, this.user).subscribe(\n      success => {\n        this.alertifyService.success('Updated successfuly');\n        this.editForm.reset(this.user);\n      },\n      error => {\n        this.alertifyService.error(error);\n      }\n    );\n\n  }\n\n  updateMainPhoto(photoUrl: string){\n    this.user.photoUrl = photoUrl;\n  }\n\n}\n","<div class=\"container mt-4\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-4\">\r\n      <h1>Your Profile</h1>\r\n    </div>\r\n    <div class=\"col-sm-8\">\r\n      <div *ngIf=\"editForm.dirty\" class=\"alert alert-info\">\r\n        <strong>Information:</strong> You have made changes. Any unsaved changes will be lost!\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-4\">\r\n      <div class=\"card\">\r\n        <img src=\"{{photoUrl || '../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\" class=\"card-img-top img-thumbnail\">\r\n        <div class=\"card-body\">\r\n          <div>\r\n            <strong>Location:</strong>\r\n            <p>{{user.city}}, {{user.country}}</p>\r\n          </div>\r\n          <div>\r\n            <strong>Age:</strong>\r\n            <p>{{user.age}}</p>\r\n          </div>\r\n          <div>\r\n            <strong>Last Active:</strong>\r\n            <p>{{ user.lastActive | date: 'mediumDate'}}</p>\r\n          </div>\r\n          <div>\r\n            <strong>Member since:</strong>\r\n            <p>{{user.created | date: 'mediumDate'}}</p>\r\n          </div>\r\n          <div class=\"card-footer\">\r\n            <div class=\"btn-group d-flex\">\r\n              <button [disabled]=\"!editForm.dirty\" form=\"editForm\" class=\"btn btn-primary w-100\">Save changes</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-8\">\r\n      <div class=\"tab-panel\">\r\n        <tabset class=\"member-tabset\">\r\n          <tab heading=\"Edit Profile\">\r\n            <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateUser()\">\r\n              <h4>Description</h4>\r\n              <textarea class=\"form-control\" name=\"introduction\" rows=\"6\" \r\n              [(ngModel)]=\"user.introduction\"></textarea>\r\n              <h4>Look For</h4>\r\n              <textarea class=\"form-control\" name=\"lookingFor\" rows=\"6\" \r\n              [(ngModel)]=\"user.lookingFor\"></textarea>\r\n              <h4>Interests</h4>\r\n              <textarea class=\"form-control\" name=\"interests\" rows=\"6\" \r\n              [(ngModel)]=\"user.interests\"></textarea>\r\n              <h4>Location Details:</h4>\r\n              <div class=\"form-inline\">\r\n                <label for=\"city\">City</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"city\" [(ngModel)]=\"user.city\">\r\n                <label for=\"city\">Country</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"country\" [(ngModel)]=\"user.country\">\r\n              </div>                \r\n            </form>\r\n          </tab>\r\n          <tab heading=\"Edit Photos\">\r\n            <app-photo-editor [photos] = 'user.photos' (getNewMainPhoto)=\"updateMainPhoto($event)\"></app-photo-editor>\r\n          </tab>              \r\n        </tabset>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>    \r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../_models/user';\nimport { UserService } from '../../_services/user.service';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Pagination, PaginationResult } from '../../_models/Pagination'\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  users: User[];\n  user: User = JSON.parse(localStorage.getItem('user'));\n  genderList = [ { value: 'male', display: 'Males'}, { value: 'female', display: 'Females'}];\n  userParams: any = {};\n  pagination: Pagination;\n\n  constructor(private userService: UserService, private alertifyService: AlertifyService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n    this.users = data['users'].result; \n    this.pagination = data['users'].pagination; });\n\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.userParams.orderBy = 'lastActive';\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n  resetFilters(){\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.loadUsers();\n  }\n\n  loadUsers(){ \n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\n    .subscribe((res: PaginationResult<User[]>) => {\n      this.users = res.result;\n      this.pagination = res.pagination;\n    }, error => {\n      this.alertifyService.error(error);\n    });\n  }\n\n}\n","<div class=\"text-center mt-3\">\n  <h2>Your matches - {{pagination.totalItems}} found</h2>\n</div>\n\n<div class=\"container mt-3\">\n  <div class=\"row\">\n    <form class=\"form-inline\" #form=\"ngForm\" (ngSubmit) = \"loadUsers()\" novalidate>\n      <div class=\"form-group\">\n        <label for=\"minAge\">Age From</label>\n        <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"minAge\" name=\"minAge\"\n          [(ngModel)]=\"userParams.minAge\" name=\"minAge\">\n      </div>\n\n      <div class=\"form-group px-2\">\n        <label for=\"maxAge\">Age To</label>\n        <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"maxAge\" name=\"maxAge\"\n        [(ngModel)]=\"userParams.maxAge\" name=\"maxAge\">\n      </div>\n\n      <div class=\"form-group px-2\">\n        <label for=\"gender\">Show: </label>\n        <select class=\"form-control ml-1\" style=\"width: 130px\" id=\"gender\" name=\"gender\" [(ngModel)]=\"userParams.gender\">\n          <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n            {{gender.display}}\n          </option>\n        </select>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-left:10px\">Apply Filters</button>\n      <button type=\"button\" (click) = \"resetFilters()\" class=\"btn btn-info\" style=\"margin-left:10px\">Reset Filter</button>\n      \n      <div class=\"col\">\n        <div class=\"btn-group float-right\">\n          <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" (click) =\"loadUsers()\" [(ngModel)]=\"userParams.orderBy\"\n            btnRadio=\"lastActive\">Last Active</button>\n          <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" (click) =\"loadUsers()\" [(ngModel)]=\"userParams.orderBy\"\n            btnRadio=\"created\">Newest Members</button>\n        </div>\n      </div>\n    </form>\n    <br>\n  </div>\n</div>\n\n<div class=\"container mt-3\">\n  <div class=\"row\">\n    <div *ngFor=\"let user of users\" class=\"col-lg-2 col-md-3 col-sm-6\">\n     <app-member-card [user]=\"user\"></app-member-card>\n    </div>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\">\n  <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" \n    [(ngModel)] =\"pagination.currentPage\" [itemsPerPage]=\"pagination.itemsPerPage\" (pageChanged) = \"pageChanged($event)\"\n    previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n  </pagination> \n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from 'src/app/_models/Message';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @Input() recipientId: number;\n  messages: Message[];\n  newMessage: any =  {};\n\n  constructor(private userService: UserService, private authService: AuthService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    const currentUserId = +this.authService.decodedToken.nameid;\n    this.userService.getMessageThread(this.authService.decodedToken.nameid, this.recipientId)\n      .pipe(\n        tap(messages => {\n          for (let i=0; i < messages.length; i++) {\n            if(messages[i].isRead === false && messages[i].recipientId === currentUserId) {\n              this.userService.markAsRead(currentUserId, messages[i].id);\n            }\n          }\n        })\n      )\n      .subscribe( messages => {\n        this.messages = messages;\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n\n  sendMessage() {\n    this.newMessage.recipientId = this.recipientId;\n    this.userService.sendMessage(this.authService.decodedToken.nameid, this.newMessage)\n      .subscribe((message: Message) => {\n        this.messages.unshift(message);\n        this.newMessage.content = '';\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <div *ngIf=\"messages?.length ===0\">\n      <p>No messages yet</p>\n    </div>\n    <ul class=\"chat\">\n      <li *ngFor=\"let message of messages\">\n        \n        \n        <div *ngIf=\"message.senderId == recipientId\">\n          <span class=\"chat-img float-left\">\n             <img src=\"{{message.senderPhotoUrl}}\" alt=\"{{message.senderKnownAs}}\" class=\"rounded-circle\">\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">\n              <strong class=\"primary-font\">{{message.senderKnownAs}}</strong>\n              <small class=\"text-muted float-right\">\n                <span class=\"fa fa-clock-o\">{{message.messageSent}}</span>\n              </small>\n            </div>\n            <p>{{message.content}}</p>\n          </div>\n        </div>\n\n        <div *ngIf=\"message.senderId != recipientId\">\n          <span class=\"chat-img float-right\">\n             <img src=\"{{message.senderPhotoUrl}}\" alt=\"{{message.senderKnownAs}}\" class=\"rounded-circle\">\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">\n              <small class=\"text-muted\">\n                <span class=\"fa fa-clock-o\">{{message.messageSent}}</span>\n                <span *ngIf=\"!message.isRead\" class=\"text-danger\">(unread)</span>\n                <span *ngIf=\"message.isRead\" class=\"text-success\">(Read {{message.datRead}})</span>\n              </small>\n              <strong class=\"primary-font float-right\">{{message.senderKnownAs}}</strong>  \n            </div>\n            <p>{{message.content}}</p>\n          </div>\n        </div>\n        \n      </li>\n    </ul>\n  </div>\n\n  <div class=\"card-footer\">\n    <form #messageForm=\"ngForm\" (ngSubmit)=\"messageForm.valid && sendMessage()\">\n      <div class=\"input-group\">\n        <input type=\"text\" [(ngModel)] =\"newMessage.content\" name=\"content\" required\n        class=\"form-control input-sm\" placeholder=\"send a private message\">\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-primary\" [disabled]=\"!messageForm.valid\">Send</button>\n        </div>\n      </div>\n    </form>\n  </div>  \n</div>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { Photo } from 'src/app/_models/photo';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { UserService } from 'src/app/_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-photo-editor',\r\n  templateUrl: './photo-editor.component.html',\r\n  styleUrls: ['./photo-editor.component.css']\r\n})\r\nexport class PhotoEditorComponent implements OnInit {\r\n  @Input() photos: Photo[];\r\n  @Output() getNewMainPhoto = new EventEmitter<string>();\r\n  uploader: FileUploader;\r\n  hasBaseDropZoneOver: boolean;\r\n  baseUrl =  environment.apiUrl;\r\n  currentMainPhoto: Photo;\r\n\r\n  constructor(private authService: AuthService, private alertifyService: AlertifyService,\r\n              private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    this.intializeUploader();\r\n  }\r\n\r\n  fileOverBase(e: any): void {\r\n    this.hasBaseDropZoneOver = e;\r\n  }\r\n\r\n  intializeUploader() {\r\n    this.uploader = new FileUploader(\r\n    {\r\n      url: this.baseUrl + 'users/' + this.authService.decodedToken.nameid + '/photos',\r\n      authToken: 'Bearer ' + localStorage.getItem('token'),\r\n      isHTML5: true,\r\n      allowedFileType: ['image'],\r\n      removeAfterUpload: true,\r\n      autoUpload: false,\r\n      maxFileSize: 10 * 1024 * 1024\r\n    });\r\n\r\n    this.uploader.onAfterAddingFile = (file) =>\r\n      { file.withCredentials = false };\r\n\r\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\r\n      if(response) {\r\n        const res: Photo = JSON.parse(response);\r\n        const photo = {\r\n          id: res.id,\r\n          url: res.url,\r\n          dateAdded: res.dateAdded,\r\n          description: res.description,\r\n          isMain: res.isMain\r\n        };\r\n\r\n        this.photos.push(photo);\r\n        if (photo.isMain) {\r\n          this.authService.changeMemberPhoto(photo.url);\r\n          this.authService.currentUser.photoUrl = photo.url;\r\n          localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setMainPhoto(photo: Photo){\r\n    this.userService.setMainPhoto(this.authService.decodedToken.nameid, photo.id).subscribe(() => {\r\n      this.currentMainPhoto = this.photos.filter(p => p.isMain === true)[0];\r\n      this.currentMainPhoto.isMain = false;\r\n      this.getNewMainPhoto.emit(photo.url);\r\n      this.authService.changeMemberPhoto(photo.url);\r\n      this.authService.currentUser.photoUrl = photo.url;\r\n      localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\r\n      photo.isMain = true;\r\n    }, error => {\r\n      this.alertifyService.error(error);\r\n    }\r\n    );\r\n  }\r\n\r\n  deletePhoto(id: number) {\r\n    this.alertifyService.confirm('Are you sure to delete photo', () => {\r\n      this.userService.deletePhoto(this.authService.decodedToken.nameid, id). subscribe( () => {\r\n        this.photos.splice(this.photos.findIndex(p => p.id === id), 1);\r\n        this.alertifyService.success('Photo has been deleted');\r\n      }), error => {\r\n        this.alertifyService.error('Failed to delete the photo');\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-sm-2\" *ngFor=\"let photo of photos\">\r\n    <img src=\"{{photo.url}}\" alt=\"\" class=\"thumbnail p-1\">\r\n    <div class=\"text-center\">\r\n      <button type=\"button\" class=\"btn btn-sm mr-1\" (click) = \"setMainPhoto(photo)\" [disabled] = \"photo.isMain\"\r\n        [ngClass]=\" photo.isMain ?  'btn btn-success' : 'btn-default'\"\r\n        >Main</button>\r\n      <button type=\"button\" (click) = \"deletePhoto(photo.id)\" [disabled] = \"photo.isMain\"\r\n        class=\"btn btn-sm btn-danger\">\r\n        <i class=\"fa fa-trash-o\"></i>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div> \r\n\r\n<div class=\"row mt-3\">\r\n \r\n  <div class=\"col-md-3\">\r\n\r\n      <h3>Add Photos</h3>\r\n\r\n      <div ng2FileDrop\r\n           [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\"\r\n           (fileOver)=\"fileOverBase($event)\"\r\n           [uploader]=\"uploader\"\r\n           class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\r\n          <i class=\"fa fa-upload fa-3x\"></i>\r\n          Drop Photos Here\r\n      </div>\r\n\r\n      Multiple\r\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\r\n\r\n      Single\r\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\r\n  </div>\r\n\r\n  <div class=\"col-md-9\" *ngIf=\"uploader?.queue?.length\"  style=\"margin-bottom: 40px\">\r\n\r\n      <h3>Upload queue</h3>\r\n      <p>Queue length: {{ uploader?.queue?.length }}</p>\r\n\r\n      <table class=\"table\">\r\n          <thead>\r\n          <tr>\r\n              <th width=\"50%\">Name</th>\r\n              <th>Size</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr *ngFor=\"let item of uploader.queue\">\r\n              <td><strong>{{ item?.file?.name }}</strong></td>\r\n              <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\r\n          </tr>\r\n          </tbody>\r\n      </table>\r\n\r\n      <div>\r\n          <div>\r\n              Queue progress:\r\n              <div class=\"progress mb-4\" style=\"\">\r\n                  <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\r\n              </div>\r\n          </div>\r\n          <button type=\"button\" class=\"btn btn-success btn-s\"\r\n                  (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\r\n              <span class=\"fa fa-upload\"></span> Upload\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-warning btn-s\"\r\n                  (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\r\n              <span class=\"fa fa-ban\"></span> Cancel\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-danger btn-s\"\r\n                  (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\r\n              <span class=\"fa fa-trash\"></span> Remove\r\n          </button>\r\n      </div>\r\n\r\n  </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from '../_services/user.service';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Message } from '../_models/Message';\nimport { Pagination, PaginationResult } from '../_models/Pagination';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer ='Unread';\n\n  constructor(private userService: UserService, private authService: AuthService, \n              private route: ActivatedRoute, private alertify: AlertifyService) \n              { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\n      this.pagination = data['messages'].pagination;\n    })\n  }\n\n  loadMessages() {\n    this.userService.getMessages(this.authService.decodedToken.nameid, this.pagination.currentPage,\n      this.pagination.itemsPerPage, this.messageContainer)\n      .subscribe((res: PaginationResult<Message[]>) => {\n        this.messages = res.result;\n        this.pagination = res.pagination; \n      }, error => {\n        this.alertify.error(error);\n      });\n\n  }\n\n  deleteMessage(id: number) {\n    this.alertify.confirm('Are you sure to delete this messsage', () => {\n      this.userService.deleteMessage(id, this.authService.decodedToken.nameid).subscribe(() => {\n        this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\n        this.alertify.success('Message has been deleted');\n      }, error => {\n        this.alertify.error(error);\n      });      \n    });\n  }\n   \n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n\n}\n","<div class=\"container mt-5\">\r\n    <div class=\"row\">\r\n      <div class=\"btn-group\">\r\n        <button class=\"btn btn-primary\" [(ngModel)]=\"messageContainer\" btnRadio=\"Unread\" (click)=\"loadMessages()\">\r\n          <i class=\"fa fa-envelope\"></i> Unread\r\n        </button>\r\n        <button class=\"btn btn-primary\" [(ngModel)]=\"messageContainer\" btnRadio=\"Inbox\" (click)=\"loadMessages()\">\r\n          <i class=\"fa fa-envelope-open\"></i> Inbox\r\n        </button>\r\n        <button class=\"btn btn-primary\" [(ngModel)]=\"messageContainer\" btnRadio=\"Outbox\" (click)=\"loadMessages()\">\r\n          <i class=\"fa fa-paper-plane\"></i> Outbox\r\n        </button>\r\n      </div>\r\n    </div>\r\n  \r\n    <div class=\"row\" *ngIf=\"messages.length == 0\">\r\n      <h3>No messages</h3>\r\n    </div>\r\n  \r\n    <div class=\"row\" *ngIf=\"messages.length > 0\">\r\n      <table class=\"table table-hover\" style=\"cursor: pointer\">\r\n        <tr>\r\n          <th style=\"width: 40%\">Message</th>\r\n          <th style=\"width: 20%\">From / To</th>\r\n          <th style=\"width: 20%\">Sent / Received</th>\r\n          <th style=\"width: 20%\"></th>\r\n        </tr>\r\n        <tr *ngFor=\"let message of messages\" [routerLink]=\"['/members', \r\n          messageContainer == 'Outbox' ? message.recipientId : message.senderId]\" [queryParams]=\"{tab: 3}\">\r\n          <td>{{message.content}}</td>\r\n          <td>\r\n            <div *ngIf=\"messageContainer != 'Outbox'\">\r\n                  <img src={{message?.senderPhotoUrl}} class=\"img-circle rounded-circle mr-1\">\r\n                  <strong>{{message.senderKnownAs}}</strong>\r\n            </div>\r\n            <div *ngIf=\"messageContainer == 'Outbox'\">\r\n                  <img src={{message?.recipientPhotoUrl}} class=\"img-circle rounded-circle\">\r\n                  <strong>{{message.recipientKnownAs}}</strong>\r\n            </div>\r\n          </td>\r\n          <td>{{message?.messageSent }}</td>\r\n          <td>\r\n            <button (click)=\"deleteMessage(message.id)\" (click)=\"$event.stopPropagation()\" class=\"btn btn-danger\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n  \r\n    </div>\r\n  \r\n  </div>\r\n  \r\n  <div class=\"d-flex justify-content-center\">\r\n      <pagination [boundaryLinks]=\"true\" \r\n                  [totalItems]=\"pagination.totalItems\"\r\n                  [itemsPerPage]=\"pagination.itemsPerPage\"\r\n                  [(ngModel)]=\"pagination.currentPage\"\r\n                  (pageChanged)=\"pageChanged($event)\"\r\n                previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\r\n    </pagination>\r\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n  photoUrl: string;\n\n  constructor(public authService: AuthService, private alertifyService: AlertifyService, private router: Router) { }\n\n  ngOnInit() {\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n\n  login(){\n    this.authService.login(this.model).subscribe(\n      next => {\n        this.alertifyService.success('Login succesfuly');\n      },\n      error => {\n        this.alertifyService.success(error);\n      }, () => {\n        this.router.navigate(['./members']);\n      }\n    );\n  }\n\n  loggedIn(){\n    return this.authService.loggedIn();\n  }\n\n  loggedOut(){\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.authService.decodedToken = null;\n    this.authService.currentUser = null;\n    this.alertifyService.message('Logged out');\n    this.router.navigate(['./home']);\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark  bg-primary\">\r\n  <div class=\"container\">\r\n    <a class=\"navbar-brand\" [routerLink]=\"['/home']\">DatingApp</a>\r\n\r\n    <ul *ngIf=\"loggedIn()\" class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item active\"  routerLinkActive=\"active\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/members']\">Matches</a>\r\n      </li>\r\n      <li class=\"nav-item\"  routerLinkActive=\"active\"> \r\n        <a class=\"nav-link\" [routerLink]=\"['/lists']\">List</a>\r\n      </li>\r\n      <li class=\"nav-item\"  routerLinkActive=\"active\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/messages']\">Messages</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <div *ngIf=\"loggedIn()\" class=\"dropdown\" dropdown>\r\n      <span class=\"mr-1\">\r\n        <img src=\"{{photoUrl || '../../assets/user.png'}}\" alt=\"\">\r\n      </span>\r\n      <a class=\"dropdown-toggle text-light\" dropdownToggle>\r\n        Welcome {{ authService.decodedToken?.unique_name | titlecase }}\r\n      </a>\r\n\r\n      <div class=\"dropdown-menu mt-3\" *dropdownMenu>\r\n        <a class=\"dropdown-item\" [routerLink]=\"['/member/edit']\"><i class=\"fa fa-user\"></i>Edit Profile</a>\r\n        <div class=\"dropdown-divider\"></div>\r\n        <a class=\"dropdown-item\" (click)=\"loggedOut()\"><i class=\"fa fa-sign-out\"></i>Log out</a>\r\n      </div>\r\n    </div>\r\n\r\n    <form *ngIf=\"!loggedIn()\" #loginForm=\"ngForm\" class=\"form-inline my-2 my-lg-0\" (ngSubmit) = \"login()\">\r\n      <input class=\"form-control mr-sm-2\" type=\"text\" [(ngModel)]=\"model.username\" required name=\"username\" placeholder=\"Username\">\r\n      <input class=\"form-control mr-sm-2\" type=\"password\" [(ngModel)]=\"model.password\" required name=\"password\" placeholder=\"Password\">\r\n      <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\r\n    </form>\r\n  </div>\r\n\r\n</nav>\r\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { FormGroup, FormControl, Validators, Form, FormBuilder } from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker/public_api';\r\nimport { User } from '../_models/user';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @Output() cancelRegister = new EventEmitter();\r\n  user: User;\r\n  registerForm: FormGroup;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(private authService: AuthService, private alertifyService: AlertifyService,\r\n              private router: Router, private fb: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.bsConfig = {\r\n      containerClass: 'theme-red'\r\n    };\r\n    this.createRegisterForm();\r\n  }\r\n\r\n  createRegisterForm() {\r\n    this.registerForm = this.fb.group({\r\n      gender: ['male'],\r\n      username: ['', Validators.required],\r\n      knownAs: ['', Validators.required],\r\n      dateOfBirth: [null, Validators.required],\r\n      city: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\r\n      confirmPassword: ['', Validators.required]\r\n    }, {validator: this.passwordMatchValidator});\r\n  }\r\n\r\n  passwordMatchValidator(g: FormGroup)\r\n  {\r\n    return g.get('password').value === g.get('confirmPassword').value ? null : {'mismatch': true} ;\r\n  }\r\n\r\n  register(){\r\n    if(this.registerForm.valid){\r\n      this.user = Object.assign({}, this.registerForm.value);\r\n      this.authService.register(this.user).subscribe(() => {\r\n        this.alertifyService.success('Registration succesful');\r\n      },\r\n      error => {\r\n        this.alertifyService.error(error);\r\n      }, () => {\r\n        this.authService.login(this.user).subscribe(() => {\r\n          this.router.navigate(['/members']);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  cancel(){\r\n    this.cancelRegister.emit(false);\r\n  }\r\n}\r\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\r\n  <h2 class=\"text-center text-primary\">Sign Up</h2>\r\n  <hr>\r\n\r\n  <div class=\"form-group\">\r\n    <label class=\"control-label\" style=\"margin-right:10px\">I am a: </label>\r\n    <label class=\"radio-inline\">\r\n      <input class=\"mr-3\" type=\"radio\" value=\"male\" formControlName=\"gender\">Male\r\n    </label>\r\n    <label class=\"radio-inline ml-3\">\r\n      <input class=\"mr-3\" type=\"radio\" value=\"female\" formControlName=\"gender\">Female\r\n    </label>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <input type=\"text\" class=\"form-control\" \r\n    required formControlName=\"username\"\r\n    [ngClass]=\"{'is-invalid': registerForm.get('username').errors && registerForm.get('username').touched}\" \r\n    placeholder=\"Username\">\r\n    <div class=\"invalid-feeback\">\r\n      Please choose a username\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <input [ngClass]=\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\" class=\"form-control\"\r\n      placeholder=\"Known as\" formControlName=\"knownAs\">\r\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\">Known as is required</div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <input type=\"password\"\r\n     class=\"form-control\"\r\n     [ngClass]=\"{'is-invalid': registerForm.get('password').errors && registerForm.get('password').touched}\"  \r\n     required formControlName=\"password\" placeholder=\"Password\">\r\n    <div class=\"invalid-feeback\" \r\n    *ngIf=\"registerForm.get('password').hasError('required') &&\r\n            registerForm.get('password').touched\">\r\n      Password is required  \r\n    </div>\r\n    <div class=\"invalid-feeback\" \r\n    *ngIf=\"registerForm.get('password').hasError('minlength') &&\r\n            registerForm.get('password').touched\">\r\n      Password must be at least 4 characters  \r\n    </div>\r\n    <div class=\"invalid-feeback\" \r\n    *ngIf=\"registerForm.get('password').hasError('maxlength') &&\r\n            registerForm.get('password').touched\">\r\n      Password must be at most 8 characters   \r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <input type=\"password\" class=\"form-control\"\r\n    [ngClass]=\"{'is-invalid': registerForm.get('confirmPassword').errors && registerForm.get('confirmPassword').touched\r\n      || registerForm.get('confirmPassword').touched && registerForm.hasError('mismatch')}\"  \r\n    required formControlName=\"confirmPassword\" placeholder=\"Confirm Password\">\r\n    <div class=\"invalid-feeback\" \r\n    *ngIf=\"registerForm.get('confirmPassword').hasError('required') &&\r\n            registerForm.get('confirmPassword').touched\">\r\n      Confirm password is required  \r\n    </div>\r\n    <div class=\"invalid-feeback\" \r\n    *ngIf=\"registerForm.get('confirmPassword').touched && registerForm.hasError('mismatch')\">\r\n      Passwords must match\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <input [ngClass]=\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\" class=\"form-control\"\r\n      placeholder=\"City\" formControlName=\"city\">\r\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\">City is required</div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <input [ngClass]=\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\" class=\"form-control\"\r\n      placeholder=\"Country\" formControlName=\"country\">\r\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\">Country is required</div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <input [ngClass]=\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\" class=\"form-control\"\r\n      placeholder=\"Date of Birth\" formControlName=\"dateOfBirth\" type=\"text\" bsDatepicker [bsConfig] = \"bsConfig\" >\r\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\">Date of Birth is required</div>\r\n  </div>\r\n\r\n  <div class=\"form-group text-center\">\r\n    <button class=\"btn btn-success\" [disabled] = \"!registerForm.valid\" type=\"submit\">Register</button>\r\n    <button class=\"btn btn-default\" (click)=\"cancel()\" type=\"button\">Cancel</button>\r\n  </div>\r\n  \r\n</form>\r\n\r\n","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { MemberDetailsComponent } from './members/member-details/member-details.component';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberUsersResolver} from './_resolvers/member-users.resolver';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resover';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { PreventUnsaved } from './_guards/prevent-unsaved.guard';\r\nimport { ListResolver } from './_resolvers/list.resolver';\r\nimport { MessagesResolver } from './_resolvers/messages.resolver';\r\n\r\nexport const appRoutes: Routes = [\r\n    { path: '', component: HomeComponent},\r\n    {\r\n        path: '',\r\n        runGuardsAndResolvers: 'always',\r\n        canActivate: [AuthGuard],\r\n        children: [\r\n            { path: 'members',  component: MemberListComponent, resolve: {users: MemberUsersResolver} },\r\n            { path: 'members/:id',  component: MemberDetailsComponent, resolve: {user: MemberDetailResolver} },\r\n            { path: 'member/edit',  component: MemberEditComponent, resolve: {user: MemberEditResolver },\r\n                canDeactivate: [PreventUnsaved] },\r\n            { path: 'messages', component: MessagesComponent, resolve: {messages: MessagesResolver}},\r\n            { path: 'lists', component: ListsComponent, resolve: {users: ListResolver}}\r\n        ]\r\n    } ,\r\n    { path: '**', redirectTo: '', pathMatch: 'full'}\r\n];\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Component({\r\n  selector: 'app-value',\r\n  templateUrl: './value.component.html',\r\n  styleUrls: ['./value.component.css']\r\n})\r\nexport class ValueComponent implements OnInit {\r\n  values: any;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n    this.getValues();\r\n  }\r\n\r\n  getValues() {\r\n      this.http.get('https://localhost:5001/values').subscribe(response => {\r\n        this.values = response;\r\n      }, error => {\r\n        console.log(error);\r\n      }\r\n      );\r\n  }\r\n\r\n\r\n}\r\n","<p *ngFor=\"let value of values\">\r\n  {{ value.id }} . {{ value.name }}\r\n</p>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:5000/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}